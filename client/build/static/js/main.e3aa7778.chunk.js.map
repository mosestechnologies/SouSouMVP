{"version":3,"sources":["variables/charts.js","assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/react.jpg","assets/img/theme/vue.jpg","assets/img/brand/argon-react.png","assets/img/theme/team-4-800x800.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/theme/team-2-800x800.jpg","assets/img/theme/team-3-800x800.jpg","assets/img/theme/profile-cover.jpg","context/GlobalState.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Group.js","views/Index.js","views/CreateGroup.js","views/Groups.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Maps.js","views/examples/Register.js","utils/auth.js","views/examples/Login.js","views/examples/Tables.js","routes.js","views/examples/Icons.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","ProtectedRoute.js","index.js"],"names":["Chart","require","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","success","danger","warning","chartExample1","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","label","item","data","datasets","datasetIndex","yLabel","content","length","data1","canvas","labels","data2","module","exports","chartOptions","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","layout","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parseOptions","parent","chartExample2","maxBarThickness","GlobalState","createContext","AuthContext","initialState","isAuthenticated","user","token","reducer","state","action","type","console","log","payload","localStorage","setItem","JSON","stringify","clear","AdminNavbar","props","dispatch","useContext","useState","username","setUsername","useEffect","parse","getItem","Navbar","className","expand","id","Container","fluid","to","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","DropdownMenu","DropdownItem","header","tag","Link","divider","href","onClick","removeItem","history","push","Footer","Row","Col","xl","rel","target","NavItem","NavLink","React","Component","Sidebar","collapseOpen","toggleCollapse","setState","closeCollapse","logout","userData","setUserData","undefined","createLinks","routes","map","prop","key","path","NavLinkRRD","activeClassName","icon","name","activeRoute","bind","routeName","location","pathname","navbarBrandProps","logo","innerLink","outterLink","NavbarBrand","aria-labelledby","Collapse","isOpen","xs","imgAlt","imgSrc","aria-label","defaultProps","Header","Group","inviteLink","setInviteLink","groupData","setGroupData","amount","setAmount","groupId","match","params","Axios","get","headers","then","response","group","parseInt","payment_frequency","catch","error","Card","CardHeader","title","client","currency","total","paymentOptions","shipping_preference","style","size","shape","disabled","onChange","e","copy","debug","message","Table","scope","members","member","_id","first_name","last_name","email","members_limit","payment_cycle","Index","toggleNavs","preventDefault","activeNav","chartExample1Data","window","CreateGroup","setTitle","setMembersLimit","target_amount","setTargetAmount","setFrequency","setCycle","createStatus","setCreateStatus","created_by","creator","post","errors","kind","groups","isFetching","hasError","Groups","groupsList","setGroupsList","useReducer","list","Badge","UncontrolledTooltip","delay","Progress","max","barClassName","role","CardFooter","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","lg","md","Button","Profile","userProfile","setUserProfile","CardBody","htmlFor","defaultValue","rows","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","Register","setFirst_name","setLast_name","password","setPassword","setEmail","registerStatus","setRegisterStatus","submit","a","newUser","autoComplete","login","Login","isSubmitting","errorMessage","loginData","setloginData","handleInputChange","event","loginUserData","loginStatus","component","Admin","getRoutes","getBrandText","document","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","from","AdminFooter","UncontrolledCollapse","toggler","Auth","body","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","points","AuthFooter","ProtectedRoute","render","rest","App","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e3aa7778.chunk.js","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/bootstrap.ab904daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.368685db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react.c4eb3d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vue.9378e368.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.23007132.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-2-800x800.dcfcf3b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-3-800x800.497bb359.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile-cover.e2582654.jpg\";","import { createContext } from 'react'\r\n\r\nexport const GlobalState = createContext(null);\r\n\r\nexport const AuthContext = createContext();\r\n\r\n/**\r\n * The bellow snippet is our initial state object that will be used in our reducer.\r\n * The values in this object depend mainly on your use case. In our case we need to\r\n * check if a user is authenticated, contains the user data, and if a token was sent\r\n * back from the server after login.\r\n */\r\n\r\nexport const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    token: null,\r\n};\r\n\r\n/**\r\n * a reducer (which is simply a function that takes in state\r\n * and action as parameters and returns a new state based on an action)\r\n */\r\n\r\n/**\r\n * @param {*} state\r\n * @param {*} action\r\n *\r\n * The reducer function contains a case-switch statement that, based on certain actions,\r\n * returns a new state. The actions in the reducer are:\r\n *\r\n * @LOGIN — When this type of action is dispatched, it will also be dispatched with a\r\n * payload (containing user and token ). It saves the user and token to localStorage and\r\n * then returns a new state, setting isAuthenticated to true, and also sets the user and\r\n * token keys to their respective values based on the action’s payload.\r\n *\r\n * @LOGOUT — When this action is dispatched, we clear localStorage of all data and set user\r\n * and token to null .\r\n *\r\n * >>  If no action is dispatched, it returns the initial state.\r\n */\r\nlet i=0;\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            console.log(\"USER ACTION: \", action.payload.user, i++ , \" TOKEN ACTION: \", action.payload);\r\n            localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n            localStorage.setItem('auth-token', action.payload.token); // saving token to localstorage\r\n\t\t\tlocalStorage.setItem('login', true);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload.user,\r\n                token: action.payload.token\r\n            };\r\n        case \"LOGOUT\":\r\n            localStorage.clear();\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/GlobalState\";\n\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nconst AdminNavbar = (props) => {\n  const { dispatch } = useContext(AuthContext);\n  const [ username, setUsername ] = useState('');\n  const logout = () => {\n    console.log(\"LOGOUT\");\n    localStorage.removeItem(\"auth-token\");\n    localStorage.setItem('login', false);\n    localStorage.removeItem(\"user\");\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    props.history.push('/auth/index');\n  }\n\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem('user'));\n    setUsername(user.username)\n  },[]);\n\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {props.brandText}\n            </Link>\n            <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        { username }\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-calendar-grid-58\" />\n                    <span>Activity</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-support-16\" />\n                    <span>Support</span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href=\"#pablo\" onClick={logout}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2020{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"#\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                SouSou\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"#\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  SouSou\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"#\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  About Us\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"#\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"#\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  MIT License\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { useContext } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\nimport { GlobalState } from \"../../context/GlobalState\";\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n\n    state = {\n      collapseOpen: false\n    };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n\n  logout = ()=>{\n    console.log(\"LOGOUT\");\n    const { userData, setUserData } = useContext(GlobalState);\n    console.log(\"Context State\", userData);\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n    localStorage.setItem('login', false);\n\n  }\n\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <h1>SouSou</h1>\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n\n                {/** <<<< @Logout  >>>>*/}\n\n                <DropdownItem href=\"#pablo\" onClick={this.logout}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            {/**  <h6 className=\"navbar-heading text-muted\">Documentation</h6>\n\n            @Navigation\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/overview?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Getting started\n                </NavLink>\n              </NavItem>\n            </Nav> */}\n\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              {/* <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Traffic\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            350,897\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            New users\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            2,356\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-danger mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Sales\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">924</span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-warning mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 1.10%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since yesterday</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Performance\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            49,65%\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fas fa-arrow-up\" /> 12%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row> */}\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\r\nimport Header from \"components/Headers/Header.js\";\r\nimport {\r\n    Button, Card, CardHeader, CardBody,\r\n    NavItem, NavLink, Nav, Table, Media,\r\n    Container,Row, Col\r\n} from \"reactstrap\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport Axios from 'axios';\r\nimport paypal from 'paypal-rest-sdk';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nconst Group = (props) => {\r\n    const [inviteLink, setInviteLink] = useState();\r\n    const [groupData, setGroupData] = useState([]);\r\n    const [amount, setAmount] = useState();\r\n    const { groupId } = props.match.params;\r\n\r\n    let user;\r\n    if (localStorage.getItem('user') === null){\r\n        props.history.push('/auth/login');\r\n    }\r\n    else {\r\n        user = JSON.parse(localStorage.getItem('user'));\r\n    }\r\n    const token = localStorage.getItem('auth-token');\r\n\r\n    const handleInputChange = (e) => setInviteLink(e.target.value);\r\n\r\n    const copyLink = () => {\r\n        copy(inviteLink, {\r\n            debug: true,\r\n            message: 'Press #{key} to copy',\r\n        });\r\n        console.log(inviteLink);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (localStorage.getItem('user') === null){\r\n            props.history.push('/auth/login');\r\n        }\r\n        Axios.get(`/group/get-group/${groupId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': token\r\n            }\r\n        })\r\n        .then( response => {\r\n            console.log('Group DATA Successfully', response.data.group);\r\n            setGroupData(response.data.group);\r\n            setAmount(parseInt(response.data.group[0].payment_frequency));\r\n        }).catch(error => {\r\n            console.log('ERROR:>> ', error);\r\n        });\r\n    }, []);\r\n\r\n    const client = {\r\n        'sandbox': 'AYsJCaZfgj6KHfKlmYrkk5zRi5UdaDd94Ew6PtwfLA2c1JsocatAvZKtcHvUU-VMd1KHVjahJvsOLbnA', // please provide your client id here\r\n        'client_secret': 'EG2EEx66Y9t1oWQPHfR32TQUcxa_Rm5n5uyZcE9S_yMqgDvqEabskqxj1cN9Eoc2GKPCShHfjIPqZjke'\r\n    };\r\n    const paymentOptions = {\"application_context\": { shipping_preference: 'NO_SHIPPING' }}\r\n\r\n    const handlePayment = () => {\r\n        console.log(amount);\r\n        console.log(typeof(amount));\r\n        // Axios.get(`/payment/paypal`, {amount: amount}, {\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'auth-token': token\r\n        //     }\r\n        // })\r\n        // .then( response => {\r\n        //     console.log('Payment Successfully Processed');\r\n        // }).catch(error => {\r\n        //     console.log('ERROR:>> ', error);\r\n        // });\r\n    };\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Container className=\"mt--9\" fluid>\r\n                <Card className=\"shadow border-0\">\r\n                    <div className=\"card\" >\r\n                        <CardHeader className=\"card-header\">\r\n                            <center>\r\n                                { groupData.map((data, index)=><h1 key={index}>{data.title}</h1>)}\r\n                            </center>\r\n                            <div className=\"row justify-content-end mr-7\">\r\n                                {/* <button className=\"btn btn-warning btn-lg\" onClick={handlePayment}>Make Payment $</button> */}\r\n                                <PaypalExpressBtn client={client}  currency={'USD'} total={amount}\r\n                                    paymentOptions={paymentOptions}\r\n                                    style= {{\r\n                                        color:  'gold',\r\n                                        size:   'medium',\r\n                                        shape:  'pill',\r\n                                        label:  'pay',\r\n                                        height: 40\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </CardHeader>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <div className=\"col-lg-9 col-sm-12 mt-4 row\">\r\n                                    <input className=\"col-lg-9 mr-4\" type=\"text\" disabled value={`https://www.sousou-app.herokuapp.com/joingroup/${user.id}/${groupId}`} onChange={ handleInputChange }/>\r\n                                    <button type=\"submit\" onClick={ copyLink } className=\"col-2 btn btn-success\">\r\n                                        Copy invite Link\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <h2>Members List</h2>\r\n                                    <Table className=\"align-items-center table-flush\" responsive>\r\n                                        <thead className=\"thead-light\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">Name</th>\r\n                                                <th scope=\"col\">Email</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                groupData.map((data) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                        groupData[0].members.map((member)=>{\r\n                                                            return (\r\n                                                                <>\r\n                                                                <tr key={member._id}>\r\n                                                                    <th scope=\"row\" >\r\n                                                                        <Media className=\"align-items-center\">\r\n                                                                            <Media>\r\n                                                                                <span className=\"mb-0 text-sm\">\r\n                                                                                    { `${member.first_name} ${member.last_name}` }\r\n                                                                                    </span>\r\n                                                                            </Media>\r\n                                                                        </Media>\r\n                                                                    </th>\r\n                                                                    <td>{member.email}</td>\r\n                                                                </tr>\r\n                                                                </>\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </>\r\n                                                )})\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <h2>Group Details</h2>\r\n                                    <Table className=\"align-items-center table-flush\" responsive>\r\n                                        <thead className=\"thead-light\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">Limit</th>\r\n                                                <th scope=\"col\">Joined</th>\r\n                                                <th scope=\"col\">Installment</th>\r\n                                                <th scope=\"col\">Payment Cycle</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                groupData.map((data) => {\r\n                                                return (\r\n                                                    <tr key={data._id}>\r\n                                                        <th scope=\"row\" >\r\n                                                            <Media className=\"align-items-center\">\r\n                                                                <Media>\r\n                                                                    <span className=\"mb-0 text-sm\">\r\n                                                                        { `${data.members_limit} ` }\r\n                                                                        </span>\r\n                                                                </Media>\r\n                                                            </Media>\r\n                                                        </th>\r\n                                                        <td>{data.members.length}</td>\r\n                                                        <td>{data.payment_frequency}</td>\r\n                                                        <td>{data.payment_cycle}</td>\r\n                                                    </tr>\r\n                                                )})\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Group;","import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Sales value</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n\n                  // CHART\n\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Performance\n                      </h6>\n                      <h2 className=\"mb-0\">Total orders</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n\n                  // CHART\n\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Page visits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Page name</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\">Unique users</th>\n                      <th scope=\"col\">Bounce rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">/argon/</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/index.html</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/charts.html</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/tables.html</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/profile.html</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Social traffic</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Referral</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Google</th>\n                      <td>4,807</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">80%</span>\n                          <div>\n                            <Progress max=\"100\" value=\"80\" />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Instagram</th>\n                      <td>3,678</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">75%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"75\"\n                              barClassName=\"bg-gradient-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">twitter</th>\n                      <td>2,645</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"30\"\n                              barClassName=\"bg-gradient-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { GlobalState } from \"../context/GlobalState\";\r\nimport {\r\n    Button, Card, CardHeader, CardBody,\r\n    NavItem, NavLink, Nav,\r\n    Container,Row, Col\r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Axios from 'axios';\r\n\r\n\r\nimport './MessageBar.css';\r\n\r\nconst CreateGroup = () => {\r\n    // const { setUserData } = useContext(GlobalState);\r\n    const data = {\r\n        \"title\" : \"\",\r\n        \"members\": \"5f48fadb20130633e0299933\",\r\n        \"created_by\": \"5f48fadb20130633e0299933\",\r\n        \"target_amount\": \"\",\r\n        \"payment_frequency\": \"\",\r\n        \"payment_cycle\": \"Weekly\",\r\n        \"members_limit\": \"\"\r\n    };\r\n\r\n    const [title, setTitle] = useState();\r\n\tconst [members_limit, setMembersLimit] = useState();\r\n\tconst [target_amount, setTargetAmount] = useState();\r\n\tconst [payment_frequency, setFrequency] = useState();\r\n    const [payment_cycle, setCycle] = useState();\r\n    // const [created_by, setCreator] = useState();\r\n    const [createStatus, setCreateStatus] = useState();\r\n\r\n\r\n    const createGroup = () => {\r\n        const creator = JSON.parse(localStorage.getItem('user'));\r\n        let created_by, members;\r\n        if (creator){\r\n            created_by = creator.id;\r\n            members = creator.id;\r\n            console.log(created_by);\r\n        }\r\n        const groupData = { title, members, members_limit, target_amount, payment_frequency, payment_cycle, created_by };\r\n        try {\r\n            const token = localStorage.getItem('auth-token');\r\n            console.log(token);\r\n            Axios.post('/group/create', groupData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                }\r\n            })\r\n            .then( response => {\r\n                console.log('Group Created Successfully', response);\r\n                setCreateStatus(true);\r\n            }).catch(error => {\r\n                console.log('ERROR:>> ', error);\r\n                if (error.response.data.error){\r\n                    console.log({\r\n                        \"ERROR: \":error,\r\n                        'ERROR MESSAGE: ': error.response.data.error.message,\r\n                        'ERROR TITLE: ': error.response.data.error.errors.title.message,\r\n                        'ERROR KIND: ': error.response.data.error.errors.title.kind,\r\n                        'ERROR NAME: ': error.response.data.error.errors.title.name,\r\n                        'ERROR PATH': error.response.data.error.errors.title.path\r\n                    });\r\n                }\r\n                //console.log('ERROR MESSAGE:>> ', error.response.data.error.message);\r\n            });\r\n        } catch (error) {\r\n            console.log('ERROR CREATING GROUP: ', error);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect (() => {\r\n        const successMessage = () => {\r\n            if (createStatus === true){\r\n                return (\r\n                    <div className=\"success\">\r\n                        Group Successfully Created\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }, [createStatus]);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Container className=\"mt--7\" fluid>\r\n                <Row>\r\n\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow border-0\">\r\n                        <div className=\"card\" >\r\n                            <div className=\"card-header\">\r\n                                <center>\r\n                                    <h2>Enter Group Details</h2>\r\n                                </center>\r\n\r\n                            </div>\r\n                            <div className=\"row justify-content-center mb-4\">\r\n                                <div className=\"col-9 mt-4\">\r\n\r\n{/*<!-- -------------------------------- form --------------------------------- -->*/}\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Group Title\" onChange={ e => setTitle(e.target.value)} className=\"form-control\" id=\"title\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Members Limit\" onChange={ e => setMembersLimit(e.target.value)} className=\"form-control\" id=\"members\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Payment Frequency\" onChange={ e => setFrequency(e.target.value)} className=\"form-control\" id=\"frequency\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Target Amount\" onChange={ e => setTargetAmount(e.target.value)} className=\"form-control\" id=\"target\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" placeholder=\"Payment Interval\" onChange={ e => setCycle(e.target.value)} className=\"form-control\" id=\"interval\"/>\r\n                                    </div>\r\n\r\n                                    <button id=\"add\" type=\"submit\" onClick={createGroup} className=\"btn btn-primary\">Add</button>\r\n\r\n{/*<!-- ------------------------------ form end ------------------------------- -->*/}\r\n\r\n                                    <div >\r\n                                        {\r\n                                            createStatus ? (\r\n                                                <div className=\"success\">\r\n                                                    Group Successfully Created\r\n                                                </div>\r\n                                            ) : (<div></div>)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n   Button,\r\n   Badge, Card,\r\n   CardHeader, CardBody,\r\n   Container,\r\n   CardFooter,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem,\r\n   Media, Progress, Row, Table,\r\n   UncontrolledDropdown,\r\n   UncontrolledTooltip,\r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Axios from 'axios';\r\nimport { AuthContext } from '../context/GlobalState';\r\nimport { Link } from \"react-router-dom\";\r\nimport { array } from 'yup';\r\n\r\nconst initialState = {\r\n   groups: [],\r\n   isFetching: false,\r\n   hasError: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n   switch (action.type) {\r\n      case \"FETCH_GROUPS_REQUEST\":\r\n         return {\r\n            ...state,\r\n            isFetching: true,\r\n            hasError: false\r\n         };\r\n      case \"FETCH_GROUPS_SUCCESS\":\r\n         return {\r\n            ...state,\r\n            isFetching: false,\r\n            groups: action.payload\r\n         };\r\n      case \"FETCH_GROUPS_FAILURE\":\r\n         return {\r\n            ...state,\r\n            hasError: true,\r\n            isFetching: false\r\n         };\r\n      default:\r\n         return state;\r\n}\r\n};\r\n\r\nconst Groups = () => {\r\n\r\n   const [groupsList, setGroupsList] = useState([]);\r\n   const [state, dispatch] = React.useReducer(reducer, initialState);\r\n   const { state: authState } = React.useContext(AuthContext);\r\n\r\n   useEffect (() => {\r\n\r\n      dispatch({\r\n         type: \"FETCH_GROUPS_REQUEST\"\r\n      });\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const token = localStorage.getItem('auth-token');\r\n      const id = user.id;\r\n\r\n      Axios.get(`/group/get/${id}`, {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': token\r\n         }\r\n      })\r\n      .then(response => {\r\n         console.log(response.data.Groups);\r\n         setGroupsList(response.data.Groups);\r\n         return response;\r\n      })\r\n      .then(response => {\r\n         console.log(response);\r\n         dispatch({\r\n            type: \"FETCH_GROUPS_SUCCESS\",\r\n            payload: response\r\n         });\r\n      })\r\n      .catch(error => console.error(error.response));\r\n\r\n   }, []);\r\n   return (\r\n      <div>\r\n            <Header />\r\n            <Container className=\"mt--7\" fluid>\r\n               <Row>\r\n                  <div className=\"col\">\r\n                     <Card className=\"shadow\">\r\n                        <CardHeader className=\"border-0\">\r\n                           <h3 className=\"mb-0\">Groups</h3>\r\n                        </CardHeader>\r\n                        <Table className=\"align-items-center table-flush\" responsive>\r\n                           <thead className=\"thead-light\">\r\n                              <tr>\r\n                                 <th scope=\"col\">Title</th>\r\n                                 <th scope=\"col\">Target</th>\r\n                                 <th scope=\"col\">Status</th>\r\n                                 <th scope=\"col\">Members</th>\r\n                                 <th scope=\"col\">Completion</th>\r\n                                 <th scope=\"col\" />\r\n                              </tr>\r\n                           </thead>\r\n                           {\r\n                              state.isFetching ? (\r\n                                 <tbody className=\"card\">\r\n                                    <tr><td>LOADING...</td></tr>\r\n                                 </tbody>\r\n                              ) : state.hasError ? (\r\n                                    <tbody className=\"card\">\r\n                                       <tr>AN ERROR HAS OCCURED</tr>\r\n                                    </tbody>\r\n                              ) : state.groups.length === 0 ? (\r\n\r\n                                    <tbody>\r\n                                       {console.log(\"NO GROUPS: \", state.groups.length)}\r\n                                       No Groups Found\r\n                                    </tbody>\r\n                              ):\r\n\r\n                              (\r\n\r\n                           <tbody>\r\n                              {\r\n                                 groupsList.map((list) => {\r\n                                 console.log('MEMBERS: ', list.members);\r\n                                 console.log('TITLE: ', list.title);\r\n                                 console.log('TARGET AMOUNT: ', list.target_amount);\r\n                                 return (\r\n                                    <tr key={list._id}>\r\n                                       <th scope=\"row\" >\r\n                                          <Media className=\"align-items-center\">\r\n                                             <Media>\r\n                                                <span className=\"mb-0 text-sm\">\r\n                                                   <Link to={`/group/${list._id}`}>{list.title}</Link>\r\n                                                </span>\r\n                                             </Media>\r\n                                          </Media>\r\n                                       </th>\r\n                                       <td>{list.target_amount}</td>\r\n                                       <td>\r\n                                          <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                                             <i className=\"bg-warning\" />\r\n                                             pending\r\n                                          </Badge>\r\n                                       </td>\r\n                                       <td>\r\n                                          <div className=\"avatar-group\">\r\n                                             <a className=\"avatar avatar-sm\" href=\"#pablo\" id=\"tooltip742438047\" onClick={e => e.preventDefault()}>\r\n                                                <img alt=\"...\" className=\"rounded-circle\" src={require(\"assets/img/theme/team-1-800x800.jpg\")} />\r\n                                             </a>\r\n                                             <UncontrolledTooltip delay={0} target=\"tooltip742438047\">\r\n                                                {list.members.first_name}\r\n                                             </UncontrolledTooltip>\r\n                                             <a className=\"avatar avatar-sm\" href=\"#pablo\" id=\"tooltip941738690\" onClick={e => e.preventDefault()}>\r\n                                                <img alt=\"...\" className=\"rounded-circle\" src={require(\"assets/img/theme/team-2-800x800.jpg\")}/>\r\n                                             </a>\r\n                                             <UncontrolledTooltip delay={0} target=\"tooltip941738690\">\r\n                                                Romina Hadid\r\n                                             </UncontrolledTooltip>\r\n                                             <a className=\"avatar avatar-sm\" href=\"#pablo\" id=\"tooltip804044742\" onClick={e => e.preventDefault()}>\r\n                                                <img alt=\"...\" className=\"rounded-circle\" src={require(\"assets/img/theme/team-3-800x800.jpg\")}/>\r\n                                             </a>\r\n                                             <UncontrolledTooltip delay={0} target=\"tooltip804044742\">\r\n                                                Alexander Smith\r\n                                             </UncontrolledTooltip>\r\n                                             <a className=\"avatar avatar-sm\" href=\"#pablo\" id=\"tooltip996637554\" onClick={e => e.preventDefault()}>\r\n                                                <img alt=\"...\" className=\"rounded-circle\" src={require(\"assets/img/theme/team-4-800x800.jpg\")}/>\r\n                                             </a>\r\n                                             <UncontrolledTooltip delay={0} target=\"tooltip996637554\">\r\n                                                Jessica Doe\r\n                                             </UncontrolledTooltip>\r\n                                          </div>\r\n                                       </td>\r\n                                       <td>\r\n                                          <div className=\"d-flex align-items-center\">\r\n                                             <span className=\"mr-2\">60%</span>\r\n                                             <div>\r\n                                                <Progress max=\"100\" value=\"60\" barClassName=\"bg-danger\"/>\r\n                                             </div>\r\n                                          </div>\r\n                                       </td>\r\n                                       <td className=\"text-right\">\r\n                                          <UncontrolledDropdown>\r\n                                             <DropdownToggle className=\"btn-icon-only text-light\" href=\"#pablo\" role=\"button\" size=\"sm\" color=\"\" onClick={e => e.preventDefault()}>\r\n                                                <i className=\"fas fa-ellipsis-v\" />\r\n                                             </DropdownToggle>\r\n                                             <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                                             <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                                                Action\r\n                                             </DropdownItem>\r\n                                             <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                                                Another action\r\n                                             </DropdownItem>\r\n                                             <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\r\n                                                Something else here\r\n                                             </DropdownItem>\r\n                                          </DropdownMenu>\r\n                                          </UncontrolledDropdown>\r\n                                       </td>\r\n                                    </tr>\r\n                                 )})\r\n                              }\r\n                           </tbody>\r\n\r\n                           )}\r\n                        </Table>\r\n                        <CardFooter className=\"py-4\"></CardFooter>\r\n                     </Card>\r\n                  </div>\r\n               </Row>\r\n            </Container>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Groups;\r\n\r\n\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/**\r\n{list.members.map( member =>{\r\n   return (\r\n      <span key={list.members._id}>\r\n         <a className=\"avatar avatar-sm\" href=\"#pablo\" id=\"tooltip742438047\" onClick={e => e.preventDefault()}>\r\n         <img alt=\"...\" className=\"rounded-circle\" src={require(\"assets/img/theme/team-1-800x800.jpg\")} />\r\n         </a>\r\n         <UncontrolledTooltip delay={0} target=\"tooltip742438047\">\r\n            {list.members.first_name}\r\n         </UncontrolledTooltip>\r\n      </span>\r\n   )\r\n})}\r\n\r\n*/}\r\n","import React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Jesse</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n                <Button\n                  color=\"info\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Edit profile\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from 'axios';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\n\nconst Profile = () => {\n  const [userProfile, setUserProfile] = useState({});\n\n  useEffect(()=>{\n    console.log('Profile');\n    const user = JSON.parse(localStorage.getItem('user') || null)\n    const token =  (localStorage.getItem('auth-token') || null);\n    let header = {\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        }\n    };\n\n    Axios.get(`/users/find-user/${user.id}`, header) // Fetching user data\n\t\t.then((response) => {\n\t\t\t// handle success\n      console.log(\"Profile: \", response);\n      setUserProfile({\n        email: response.data.email,\n        first_name: response.data.first_name,\n        last_name: response.data.last_name,\n        username: response.data.username,\n      })\n\t\t\treturn response;\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// handle error\n\t\t\tconsole.log(\"Got an error: \", error);\n\t\t});\n  }, []);\n\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    {/* <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                        />\n                      </a>\n                    </div> */}\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button className=\"mr-4\" color=\"info\" href=\"#pablo\" onClick={e => e.preventDefault()} size=\"sm\">\n                      Connect\n                    </Button>\n                    <Button className=\"float-right\" color=\"default\" href=\"#pablo\" onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Message\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  {/* <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Friends</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Photos</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Comments</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row> */}\n                  <div className=\"text-center\">\n                    <h3>\n                      {`${userProfile.first_name} ${userProfile.last_name}`}\n                      {/* <span className=\"font-weight-light\">, 27</span> */}\n                    </h3>\n                    {/* <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Bucharest, Romania\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Solution Manager - Creative Tim Officer\n                    </div> */}\n\n                    <hr className=\"my-4\" />\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      {`${userProfile.email}`}\n                    </div>\n                    {/* <p>\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                      Nick Murphy — writes, performs and records all of his own music.\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a> */}\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button color=\"primary\" href=\"#pablo\" onClick={e => e.preventDefault()} size=\"sm\">\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-username\">\n                              Username\n                            </label>\n                            <Input type=\"text\"\n                              className=\"form-control-alternative\"\n                              defaultValue=\"lucky.jesse\"\n                              id=\"input-username\"\n                              placeholder={`${userProfile.username}`}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-email\">\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder={`${userProfile.email}`}\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-first-name\">\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={`${userProfile.first_name}`}\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-last-name\">\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={`${userProfile.last_name}`}\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-address\">\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-city\">\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"New York\"\n                              id=\"input-city\"\n                              placeholder=\"City\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-country\">\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"United States\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-country\">\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          defaultValue=\"A beautiful Dashboard for Bootstrap 4. It is Free and\n                          Open Source.\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n\n}\n\nexport default Profile;\n","import React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","import React, { useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/GlobalState\";\n// reactstrap components\nimport {\n  Button, Card, CardHeader,\n  CardBody, FormGroup, Form,\n  Input, InputGroupAddon,\n  InputGroupText, InputGroup,\n  Row, Col\n} from \"reactstrap\";\n\nimport Axios from 'axios';\nimport * as Yup from 'yup';\n\nfunction Register () {\n  const [first_name, setFirst_name] = useState();\n\tconst [last_name, setLast_name] = useState();\n\tconst [username, setUsername] = useState();\n\tconst [password, setPassword] = useState();\n\tconst [email, setEmail] = useState();\n\t// const [error, setError] = useState();\n\n  const [registerStatus, setRegisterStatus] = useState(false);\n\n\tconst { state } = useContext(AuthContext);\n  // const navigate = useNavigate();\n\n  const submit = async (e) => {\n\t\te.preventDefault();\n\n    const newUser = { first_name, last_name, username, password, email };\n    await Axios.post(\"/api/auth/register\", newUser)\n    .then(response => {\n      console.log('Registered Successfully', response);\n      // LogginIn\n      setRegisterStatus(true);\n      Axios.post(\"/api/auth/login\", {\n        email,\n        password,\n      }).then( response => {\n        console.log('LoggedIn', response);\n        localStorage.setItem('auth-token', response.data.token); // saving token to localstorage\n        localStorage.setItem('login', true);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n      })\n      .catch( error => console.log('Error LoggingIn ', error));\n\n    })\n    .catch(error => console.log('Error signing up', error));\n\n\t};\n\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <h1 className=\"display-4\">Register</h1>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n\n{/* ------------------------------- FORM Start ------------------------------- */}\n                <Form role=\"form\">\n                  {/** @FirstName */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-hat-3\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"firstName\" placeholder=\"First Name\" type=\"text\" onChange={(e) => setFirst_name(e.target.value)}/>\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @LasttName */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-hat-3\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"lastName\" placeholder=\"Last Name\" type=\"text\" onChange={(e) => setLast_name(e.target.value)} />\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @username */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-hat-3\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"username\" placeholder=\"User Name\" type=\"text\" onChange={(e) => setUsername(e.target.value)} />\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @Email */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-email-83\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"email\" placeholder=\"Email\" type=\"email\" onChange={(e) => setEmail(e.target.value)} autoComplete=\"new-email\"/>\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @Password */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-lock-circle-open\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input placeholder=\"Password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} autoComplete=\"new-password\"/>\n                    </InputGroup>\n                  </FormGroup>\n\n                  <div className=\"text-muted font-italic\">\n                    <small>\n                      password strength:{\" \"}\n                      <span className=\"text-success font-weight-700\">strong</span>\n                    </small>\n                  </div>\n                  <div className=\"text-center\">\n                    <Button className=\"mt-4\" color=\"primary\" type=\"button\" onClick={submit}>\n                      Create account\n                    </Button>\n                  </div>\n                  {\n                    registerStatus ? (\n                      <div className=\"success\">\n                        Successfully Registered\n                      </div>\n                    ) : (<div></div>)\n                  }\n                </Form>\n\n{/* ------------------------------- FORM Start ------------------------------- */}\n\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n}\n\n\nexport default Register;\n","import Axios from 'axios';\r\n\r\nexport const login = (data, callback, dispatch) => {\r\n\r\n\treturn Axios.post(\"/api/auth/login\", data)\r\n\t\t.then((response) => {\r\n\t\t\t// handle success\r\n\t\t\tconsole.log(response);\r\n\t\t\t// localStorage.setItem('auth-token', response.data.token); // saving token to localstorage\r\n\t\t\tcallback(response.data.token, true, response.data.user);\r\n\t\t\treturn response;\r\n\t\t}).then( response => {\r\n\t\t\tconst user = response.data.user;\r\n\t\t\tconst token = response.data.token;\r\n\t\t\tdispatch({\r\n                type: \"LOGIN\",\r\n                payload: {\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\ttoken\r\n\t\t\t\t}\r\n            })\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\t// handle error\r\n\t\t\tconsole.log(\"Got an error: \", error);\r\n\t\t});\r\n}","import React, { useState, useContext, useEffect } from \"react\";\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tFormGroup,\n\tForm,\n\tInput,\n\tInputGroupAddon,\n\tInputGroupText,\n\tInputGroup,\n\tRow,\n\tCol\n} from \"reactstrap\";\nimport { AuthContext } from \"../../context/GlobalState\";\nimport { login } from '../../utils/auth';\nimport '../MessageBar.css';\n\nfunction Login (props) {\n\t\n\tconst { state, dispatch } = useContext(AuthContext);\n\tconst initialState = {\n        email: \"\",\n        password: \"\",\n        isSubmitting: false,\n        errorMessage: null\n    };\n\tconst [loginData, setloginData] = useState(initialState); // pass initial state\n\n\tconst handleInputChange = event => {\n        setloginData({\n            ...loginData,\n            [event.target.name]: event.target.value\n        });\n    };\n\n\tconst submit = async (e) => {\n\t\te.preventDefault();\n\t\tsetloginData({\n            ...loginData,\n            isSubmitting: true,\n            errorMessage: null\n        });\n\t\tconsole.log('submitting');\n\t\tconst loginUserData = {\n\t\t\temail: loginData.email,\n\t\t\tpassword: loginData.password\n\t\t};\n\t\tconst setstate = async (token, loginStatus, userData) => {\n\t\t\t// console.log('response', token, loginStatus, userData);\n\t\t\tprops.history.push('/admin/index');  // redirecting\n\t\t}\n\t\tlogin(loginUserData, setstate, dispatch); // passing user data + callback + dispatch action\n\t}\n\n\tuseEffect(()=>{\n\t\tif (state.isAuthenticated){\n\t\t\tprops.history.push('/admin/index');\n\t\t}\n\t}, []);\n\treturn (\n    <>\n\t\t<Col lg=\"5\" md=\"7\">\n\t\t\t<Card className=\"bg-secondary shadow border-0\">\n\t\t\t\t<CardHeader className=\"bg-transparent pb-5\">\n\t\t\t\t\t<div className=\"text-muted text-center mt-2 mb-3\">\n\t\t\t\t\t<h1 className=\"display-4\">Welcome Back</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"px-lg-5 py-lg-5\">\n\n{/* ------------------------------- Form Start ------------------------------- */}\n\n\t\t\t\t\t\t<Form role=\"form\">\n\t\t\t\t\t\t\t<FormGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t<InputGroup className=\"input-group-alternative\">\n\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t\t<InputGroupText>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-email-83\" />\n\t\t\t\t\t\t\t\t\t\t</InputGroupText>\n\t\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t\t{/** ---------- @EMAIL ----------- */}\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\tvalue={ loginData.email }\n\t\t\t\t\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\t\t\t\t\ttype=\"email\" autoComplete=\"new-email\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<InputGroup className=\"input-group-alternative\">\n\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t\t<InputGroupText>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-lock-circle-open\" />\n\t\t\t\t\t\t\t\t\t\t</InputGroupText>\n\t\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t\t{/**  --------- @PASSSWORD ---------- */}\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tvalue={ loginData.password }\n\t\t\t\t\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t<Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={submit}>\n\t\t\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstate.isAuthenticated ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"success\">\n\t\t\t\t\t\t\t\t\t\t\tSuccessfully Loggedin\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (<div></div>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\n{/* ------------------------------- Form End ------------------------------- */}\n\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t\t<Row className=\"mt-3\">\n\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t<a className=\"text-light\" href=\"#pablo\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t\t<small>Forgot password?</small>\n\t\t\t\t\t</a>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"text-right\" xs=\"6\">\n\t\t\t\t\t<a className=\"text-light\" href=\"#pablo\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t<small>Create new account</small>\n\t\t\t\t\t</a>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Col>\n    </>\n\t);\n}\n\nexport default Login;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip742438047\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip742438047\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip941738690\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip941738690\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip804044742\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip804044742\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip996637554\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip996637554\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip746418347\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip746418347\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip102182364\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip102182364\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip406489510\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip406489510\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip476840018\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip476840018\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip753056318\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip753056318\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip441753266\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip441753266\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188462246\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188462246\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip621168444\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip621168444\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip875258217\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip875258217\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip834416663\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip834416663\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip372449339\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip372449339\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip108714769\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip108714769\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip664029969\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip664029969\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip806693074\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip806693074\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip844096937\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip844096937\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip757459971\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip757459971\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n                <CardFooter className=\"py-4\">\n                  <nav aria-label=\"...\">\n                    <Pagination\n                      className=\"pagination justify-content-end mb-0\"\n                      listClassName=\"justify-content-end mb-0\"\n                    >\n                      <PaginationItem className=\"disabled\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                          tabIndex=\"-1\"\n                        >\n                          <i className=\"fas fa-angle-left\" />\n                          <span className=\"sr-only\">Previous</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem className=\"active\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          1\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          2 <span className=\"sr-only\">(current)</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          3\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-angle-right\" />\n                          <span className=\"sr-only\">Next</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                    </Pagination>\n                  </nav>\n                </CardFooter>\n              </Card>\n            </div>\n          </Row>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip731399078\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip731399078\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip491083084\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip491083084\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip528540780\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip528540780\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip237898869\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip237898869\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188614932\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188614932\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip66535734\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip66535734\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip427561578\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip427561578\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip904098289\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip904098289\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip707904950\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip707904950\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip353988222\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip353988222\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip467171202\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip467171202\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip362118155\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362118155\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip226319315\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip226319315\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip711961370\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip711961370\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip216246707\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip216246707\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip638048561\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip638048561\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip781594051\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip781594051\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip840372212\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip840372212\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip497647175\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip497647175\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip951447946\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip951447946\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","import Index from \"views/Index.js\";\nimport CreateGroup from \"views/CreateGroup\";\nimport Groups from \"views/Groups.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    //icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/create-group\",\n    name: \"Create Group\",\n    //icon: \"ni ni-tv-2 text-primary\",\n    component: CreateGroup,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/group\",\n    name: \"Groups\",\n    //icon: \"ni ni-tv-2 text-primary\",\n    component: Groups,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Tables\",\n  //   icon: \"ni ni-bullet-list-67 text-red\",\n  //   component: Tables,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\"\n  }\n];\nexport default routes;\n","import React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport Group from \"../views/Group\";\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/argon-react.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { AuthContext, reducer, initialState } from \"../../context/GlobalState\";\n\nconst AdminNavbar = () => {\n  const { state } = useContext(AuthContext);\n  console.log('DISPLAY STATE: ', state)\n\n  const checkAuth = () => {\n    if (state.isAuthenticated) {\n      return (<>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n          <i className=\"ni ni-planet\" />\n          <span className=\"nav-link-inner--text\">Dashboard</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/admin/user-profile\" tag={Link}>\n          <i className=\"ni ni-single-02\" />\n          <span className=\"nav-link-inner--text\">Profile</span>\n        </NavLink>\n      </NavItem>\n      </>)\n    }\n    else {\n      return (<>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/auth/register\" tag={Link}>\n          <i className=\"ni ni-circle-08\" />\n          <span className=\"nav-link-inner--text\">Register</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\n          <i className=\"ni ni-key-25\" />\n          <span className=\"nav-link-inner--text\">Login</span>\n        </NavLink>\n      </NavItem>\n      </>)\n    }\n  }\n\n  return (\n    <>\n      <Navbar\n        className=\"navbar-top navbar-horizontal navbar-dark\"\n        expand=\"md\"\n      >\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            SouSou\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img alt=\"...\" src={require(\"assets/img/brand/argon-react.png\")}/>\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav className=\"ml-auto\" navbar>\n              {\n                checkAuth()\n              }\n            </Nav>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2020{\" \"}\n                  <a className=\"font-weight-bold ml-1\" href=\"#\" target=\"_blank\">\n                    LOOM\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink href=\"#\" target=\"_blank\" >\n                      SouSou\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#\" target=\"_blank\" >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#\" target=\"_blank\" >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"#\" target=\"_blank\" >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            {/* <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container> */}\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext, reducer, initialState } from \"./context/GlobalState\";\r\n\r\nexport const ProtectedRoute = ({ render: Component, ...rest }) => {\r\n    // const [state] = React.useReducer(reducer);\r\n    const { state, dispatch } = React.useContext(AuthContext);\r\n    //const { userData, setUserData } = useContext(GlobalState);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                console.log('AUTH CONTEXT: ', state);\r\n                console.log('STATE: ', state)\r\n                if (state.isAuthenticated) {\r\n                    return (<Component {...props} />);\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                        to={\"/auth/login\"}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\nimport { AuthContext, reducer, initialState } from \"./context/GlobalState\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport { ProtectedRoute } from './ProtectedRoute';\nimport Group from './views/Group';\n\n/** <<<  @Styles  >>> */\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  console.log('Initial State', initialState);\n\n  useEffect(() => {\n    console.log( 'JSON PARSE: ', JSON.parse(localStorage.getItem('user') ));\n    const user = JSON.parse(localStorage.getItem('user') || null)\n    const token =  (localStorage.getItem('auth-token') || null);\n    if(user && token){\n      console.log(\"USER: \", user, \" TOKEN: \", token);\n      dispatch({\n        type: 'LOGIN',\n        payload: {\n          user,\n          token\n        }\n      })\n    }\n  }, [state.token])\n\n  return (\n    <AuthContext.Provider value={ { state, dispatch } }>\n      <HashRouter>\n      <BrowserRouter>\n        <Switch>\n          <ProtectedRoute path=\"/admin\" render={ props => <AdminLayout {...props} /> } />\n          <Route path=\"/auth\" render={ props => <AuthLayout {...props} /> } />\n          <Route path=\"/group/:groupId\" render={ props => <Group {...props} /> } />\n          <Redirect from=\"/\" to=\"/admin/index\" />\n          <Route component={() => (<div>404 Not found </div>)} />\n        </Switch>\n      </BrowserRouter>\n      </HashRouter>\n    </AuthContext.Provider>\n  )\n};\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}