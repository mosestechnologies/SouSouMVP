{"version":3,"sources":["assets/img/theme/bootstrap.jpg","assets/img/theme/angular.jpg","assets/img/theme/sketch.jpg","assets/img/theme/react.jpg","assets/img/theme/vue.jpg","assets/img/brand/argon-react.png","assets/img/theme/team-4-800x800.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/theme/team-2-800x800.jpg","assets/img/theme/team-3-800x800.jpg","../node_modules/typescript/lib sync","assets/img/theme/profile-cover.jpg","context/GlobalState.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Group.js","views/Pagination.js","views/Index.js","views/CreateGroup.js","views/Groups.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Maps.js","views/examples/Register.js","utils/auth.js","views/examples/Login.js","views/examples/Tables.js","routes.js","views/examples/Icons.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","layouts/Homepage.js","ProtectedRoute.js","views/JoinGroup.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","GlobalState","createContext","AuthContext","initialState","isAuthenticated","user","token","console","log","reducer","state","action","type","localStorage","setItem","JSON","stringify","payload","clear","AdminNavbar","props","useContext","dispatch","useState","username","setUsername","useEffect","Navbar","className","expand","Container","fluid","to","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","right","DropdownItem","header","tag","Link","divider","href","onClick","removeItem","history","push","AdminFooter","modal","setModal","toggle","Row","Col","xl","target","NavItem","NavLink","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","color","Sidebar","collapseOpen","toggleCollapse","setState","closeCollapse","logout","userData","setUserData","undefined","createLinks","routes","slice","map","prop","key","layout","path","NavLinkRRD","activeClassName","icon","name","activeRoute","bind","routeName","this","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","outterLink","NavbarBrand","aria-labelledby","Collapse","xs","aria-label","React","Component","defaultProps","Header","Group","inviteLink","setInviteLink","groupData","setGroupData","amount","setAmount","groupId","match","params","getItem","parse","memberID","Axios","post","headers","then","response","data","group","parseInt","payment_frequency","catch","error","Card","CardHeader","title","client","sandbox","client_secret","currency","total","paymentOptions","application_context","shipping_preference","style","size","shape","label","height","disabled","value","getUserId","onChange","copy","debug","message","Table","responsive","scope","members_limit","payment_cycle","Paginations","totalposts","paginate","totalusers","pageNumbers","i","Math","ceil","number","isFetching","hasError","groups","reducer1","users","initialStateUsers","Index","authState","currentGroupPage","currentUserPage","setCurrentUserPage","usersList","setUsersList","groupsList","setGroupsList","totalUsers","setTotalUsers","useReducer","userState","dispatch1","body","role","a","request","total_users","fetchData","data1","groupfetch","get","Groups","length","list","_id","target_amount","members","preventDefault","item","email","status","CardFooter","Pagination","pageNumber","CreateGroup","setTitle","setMembersLimit","setTargetAmount","setFrequency","setCycle","createStatus","setCreateStatus","created_by","creator","errors","kind","initialUpdateState","membersLimit","UpdateData","setUpdateData","setCurrentGroupPage","totalGroups","setTotalGroups","handleOnChange","event","posts","total_groups","Badge","Progress","max","barClassName","cycle_status","userID","Label","paymentfrequency","targetAmount","paymentInterval","UserHeader","minHeight","backgroundImage","backgroundSize","backgroundPosition","lg","md","Profile","userProfile","setUserProfile","first_name","last_name","CardBody","htmlFor","defaultValue","rows","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","position","Register","setFirst_name","setLast_name","password","setPassword","setEmail","registerStatus","setRegisterStatus","submit","newUser","autoComplete","login","callback","Login","isSubmitting","errorMessage","loginData","setloginData","handleInputChange","loginUserData","loginStatus","component","Admin","getRoutes","getBrandText","document","documentElement","scrollTop","scrollingElement","refs","mainContent","imgSrc","imgAlt","ref","from","UncontrolledCollapse","toggler","AuthFooter","Auth","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","Homepage","class","ProtectedRoute","render","rest","JoinGroup","userId","App","Provider","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a91acf65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bootstrap.ab904daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/angular.368685db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react.c4eb3d0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vue.9378e368.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","module.exports = __webpack_public_path__ + \"static/media/team-4-800x800.23007132.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-2-800x800.dcfcf3b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team-3-800x800.497bb359.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 627;","module.exports = __webpack_public_path__ + \"static/media/profile-cover.e2582654.jpg\";","import { createContext } from 'react'\n\nexport const GlobalState = createContext(null);\n\nexport const AuthContext = createContext();\n\n/**\n * The bellow snippet is our initial state object that will be used in our reducer.\n * The values in this object depend mainly on your use case. In our case we need to\n * check if a user is authenticated, contains the user data, and if a token was sent\n * back from the server after login.\n */\n\nexport const initialState = {\n    isAuthenticated: false,\n    user: null,\n    token: null,\n};\nconsole.log(initialState);\n/**\n * a reducer (which is simply a function that takes in state\n * and action as parameters and returns a new state based on an action)\n */\n\n/**\n * @param {*} state\n * @param {*} action\n *\n * The reducer function contains a case-switch statement that, based on certain actions,\n * returns a new state. The actions in the reducer are:\n *\n * @LOGIN — When this type of action is dispatched, it will also be dispatched with a\n * payload (containing user and token ). It saves the user and token to localStorage and\n * then returns a new state, setting isAuthenticated to true, and also sets the user and\n * token keys to their respective values based on the action’s payload.\n *\n * @LOGOUT — When this action is dispatched, we clear localStorage of all data and set user\n * and token to null .\n *\n * >>  If no action is dispatched, it returns the initial state.\n */\nlet i=0;\nexport const reducer = (state, action) => {\n    console.log('this is it>>>>>',action );\n    switch (action.type) {\n        case \"LOGIN\":\n            // console.log(\"USER ACTION: \", action.payload.user, i++ , \" TOKEN ACTION: \", action.payload);\n            localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\n            localStorage.setItem('auth-token', action.payload.token); // saving token to localstorage\n\t\t\tlocalStorage.setItem('login', true);\n            return {\n                ...state,\n                isAuthenticated: true,\n                user: action.payload.user,\n                token: action.payload.token\n            };\n        case \"LOGOUT\":\n            localStorage.clear();\n            return {\n                ...state,\n                isAuthenticated: false,\n                user: null\n            };\n        default:\n            return state;\n    }\n};","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/GlobalState\";\n\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nconst AdminNavbar = (props) => {\n  const {state ,dispatch } = useContext(AuthContext);\n  const [ username, setUsername ] = useState('');\n  const logout = () => {\n    console.log(\"LOGOUT\");\n    localStorage.removeItem(\"auth-token\");\n    localStorage.setItem('login', false);\n    localStorage.removeItem(\"user\");\n    dispatch({\n      type: \"LOGOUT\"\n    })\n    props.history.push('/auth/index');\n  }\n\n  useEffect(()=>{\n    // const user = JSON.parse(localStorage.getItem('user'));\n    setUsername(state.user.username)\n  },[]);\n\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {props.brandText}\n            </Link>\n            <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        { username }\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                 \n                  <DropdownItem divider />\n                  <DropdownItem href=\"#pablo\" onClick={logout}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n\n}\n\nexport default AdminNavbar;\n","import React, { useState } from \"react\";\n\n// reactstrap components\nimport {\n  Container,\n  Row,\n  Col,\n  Nav,\n  Modal,\n  Label,\n  Input,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\n\nfunction AdminFooter() {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © 2020{\" \"}\n                <a className=\"font-weight-bold ml-1\" href=\"#\" target=\"_blank\">\n                  SouSou\n                </a>\n              </div>\n            </Col>\n            <Col xl=\"6\">\n              <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                <NavItem>\n                  <NavLink href=\"#\" target=\"_blank\">\n                    SouSou\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#\" target=\"_blank\">\n                    About Us\n                  </NavLink>\n                </NavItem>\n\n                <NavItem>\n                  <NavLink onClick={toggle}>privacy policy</NavLink>\n                </NavItem>\n                <Modal isOpen={modal} toggle={toggle}>\n                  <ModalHeader toggle={toggle}>Privacy policy</ModalHeader>\n                  <ModalBody>\n                    What information do we collect? We collect information from\n                    you when you register on our site. When registering on our\n                    site, as appropriate, you may be asked to enter your: name,\n                    e-mail address, mailing address, and phone number. What do\n                    we use your information for? Any of the information we\n                    collect from you may be used in one of the following ways:\n                    To personalize your experience (your information helps us to\n                    better respond to your individual needs) To improve our\n                    website (we continually strive to improve our website\n                    offerings based on the information and feedback we receive\n                    from you) To improve customer service (your information\n                    helps us to more effectively respond to your requests and\n                    support needs) To administer a contest, promotion, survey or\n                    other site feature Do we disclose any information to outside\n                    parties? We do not sell, trade, or otherwise transfer to\n                    outside parties your personally identifiable information.\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"danger\" onClick={toggle}>\n                      Close\n                    </Button>\n                  </ModalFooter>\n                </Modal>\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n}\n\nexport default AdminFooter;\n","import React, { useContext } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\nimport { GlobalState } from \"../../context/GlobalState\";\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n\n    state = {\n      collapseOpen: false\n    };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n\n  logout = ()=>{\n    console.log(\"LOGOUT\");\n    const { userData, setUserData } = useContext(GlobalState);\n    console.log(\"Context State\", userData);\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n    localStorage.setItem('login', false);\n\n  }\n\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.slice(0,4).map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <h1>SouSou</h1>\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n               \n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                \n                <DropdownItem divider />\n\n                {/** <<<< @Logout  >>>>*/}\n\n                <DropdownItem href=\"#pablo\" onClick={this.logout}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo ? (\n                      <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n                        <h1>SouSou</h1>\n                      </NavbarBrand>\n                    ) : null}\n                    {/* User */}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            {/**  <h6 className=\"navbar-heading text-muted\">Documentation</h6>\n\n            @Navigation\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/overview?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Getting started\n                </NavLink>\n              </NavItem>\n            </Nav> */}\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              {/* <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Traffic\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            350,897\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            New users\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            2,356\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-danger mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Sales\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">924</span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-warning mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 1.10%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since yesterday</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Performance\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            49,65%\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fas fa-arrow-up\" /> 12%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row> */}\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"components/Headers/Header.js\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    NavItem,\n    NavLink,\n    Nav,\n    Table,\n    Media,\n    Container,\n    Row,\n    Col,\n} from \"reactstrap\";\nimport copy from \"copy-to-clipboard\";\nimport Axios from \"axios\";\nimport paypal from \"paypal-rest-sdk\";\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\nimport { AuthContext } from \"context/GlobalState\";\n\nconst Group = (props) => {\n    const [inviteLink, setInviteLink] = useState();\n    const [groupData, setGroupData] = useState([]);\n    const [amount, setAmount] = useState();\n    const { groupId } = props.match.params;\n    const { state } = React.useContext(AuthContext);\n\n    const getUserId = () => {\n\n\n        var user = state.user\n            ? state.user\n            : JSON.parse(localStorage.getItem(\"user\"));\n\n        if (!user) {\n        return props.history.push(\"/auth/login\");\n        }\n        // } else {\n        //   return (user = JSON.parse(localStorage.getItem(\"user\")));\n        // }\n    };\n    const token = state.token ? state.token:localStorage.getItem(\"auth-token\");\n\n    const handleInputChange = (e) => setInviteLink(e.target.value);\n\n    const copyLink = () => {\n        copy(inviteLink, {\n        debug: true,\n        message: \"Press #{key} to copy\",\n        });\n        console.log(inviteLink);\n    };\n\n    useEffect(()=>{\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user){\n            props.history.push('/auth/login');\n        }\n        console.log('user id:: ', user.id);\n        const memberID = JSON.stringify({memberID: user.id})\n        console.log('memberID id:: ', memberID);\n\n        Axios.post(`/group/get-group/${groupId}`, {memberID: user.id},{\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': token\n            }\n        })\n        .then( response => {\n            console.log('Group DATA Successfully', response.data.group);\n            setGroupData(response.data.group);\n            setAmount(parseInt(response.data.group.payment_frequency));\n        }).catch(error => {\n            console.log('ERROR:>> ', error);\n        });\n    }, []);\n\n    const client = {\n        sandbox:\n        \"AYsJCaZfgj6KHfKlmYrkk5zRi5UdaDd94Ew6PtwfLA2c1JsocatAvZKtcHvUU-VMd1KHVjahJvsOLbnA\", // please provide your client id here\n        client_secret:\n        \"EG2EEx66Y9t1oWQPHfR32TQUcxa_Rm5n5uyZcE9S_yMqgDvqEabskqxj1cN9Eoc2GKPCShHfjIPqZjke\",\n    };\n    const paymentOptions = {\n        application_context: { shipping_preference: \"NO_SHIPPING\" },\n    };\n\n    const handlePayment = () => {\n        console.log(amount);\n        console.log(typeof(amount));\n        // Axios.get(`/payment/paypal`, {amount: amount}, {\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'auth-token': token\n        //     }\n        // })\n        // .then( response => {\n        //     console.log('Payment Successfully Processed');\n        // }).catch(error => {\n        //     console.log('ERROR:>> ', error);\n        // });\n    };\n    return (\n        <>\n            <Header/>\n            <Container className=\"mt--9\" fluid>\n                <Card className=\"shadow border-0\">\n                    <div className=\"card\" >\n                        <CardHeader className=\"card-header\">\n                            <center>\n                                {console.log('groupData', groupData)}\n                                <h1>{groupData.title}</h1>\n                            </center>\n                            <div className=\"row justify-content-end mr-7\">\n                                {/* // TODO: Disablbe button if already paid */}\n                                <PaypalExpressBtn client={client}  currency={'USD'} total={amount}\n                                    paymentOptions={paymentOptions}\n                                    style= {{\n                                        color:  'gold',\n                                        size:   'medium',\n                                        shape:  'pill',\n                                        label:  'pay',\n                                        height: 40\n                                    }}\n                                    disabled\n                                />\n                            </div>\n                        </CardHeader>\n                        <div className=\"card-body\">\n                            <div className=\"row justify-content-center mb-4\">\n                                <div className=\"col-lg-9 col-sm-12 mt-4 row\">\n                                    <input className=\"col-lg-9 mr-4\" type=\"text\" disabled\n                                        value={`https://www.sousou-app.herokuapp.com/joingroup/${getUserId()}/${groupId}`}\n                                        onChange={ handleInputChange }\n                                    />\n                                    <button type=\"submit\" onClick={ copyLink } className=\"col-2 btn btn-success\">\n                                        Copy invite Link\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mb-4\">\n                                <div className=\"col-lg-6 col-sm-12\">\n                                    <h2>Members List</h2>\n                                    <Table className=\"align-items-center table-flush\" responsive>\n                                        <thead className=\"thead-light\">\n                                            <tr>\n                                                <th scope=\"col\">Name</th>\n                                                <th scope=\"col\">Email</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                            // groupData.members.map((member)=>{\n                                            //     return (\n                                            //         <>\n                                            //         <tr key={member._id}>\n                                            //             <th scope=\"row\" >\n                                            //                 <Media className=\"align-items-center\">\n                                            //                     <Media>\n                                            //                         <span className=\"mb-0 text-sm\">\n                                            //                             { `${member.first_name} ${member.last_name}` }\n                                            //                             </span>\n                                            //                     </Media>\n                                            //                 </Media>\n                                            //             </th>\n                                            //             <td>{member.email}</td>\n                                            //         </tr>\n                                            //         </>\n                                            //     )\n                                            // })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </div>\n                                <div className=\"col-lg-6 col-sm-12\">\n                                    <h2>Group Details</h2>\n                                    <Table className=\"align-items-center table-flush\" responsive>\n                                        <thead className=\"thead-light\">\n                                            <tr>\n                                                <th scope=\"col\">Limit</th>\n                                                <th scope=\"col\">Joined</th>\n                                                <th scope=\"col\">Installment</th>\n                                                <th scope=\"col\">Payment Cycle</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n\n                                            <tr>\n                                                <th scope=\"row\" >\n                                                    <Media className=\"align-items-center\">\n                                                        <Media>\n                                                            <span className=\"mb-0 text-sm\">\n                                                                { `${groupData.members_limit} ` }\n                                                                </span>\n                                                        </Media>\n                                                    </Media>\n                                                </th>\n                                                {/* <td>{groupData.members.length}</td> */}\n                                                <td>{groupData.payment_frequency}</td>\n                                                <td>{groupData.payment_cycle}</td>\n                                            </tr>\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Card>\n            </Container>\n        </>\n    );\n}\n\nexport default Group;\n","import React from 'react'\nimport ReactPaginate from \"react-paginate\";\n// import { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nfunction Paginations({ totalposts ,paginate,totalusers}) {\n    const pageNumbers = []\n    if (totalposts) {\n        for (let i = 1; i <= Math.ceil(totalposts / 10); i++) {\n            pageNumbers.push(i)\n        }\n    } else {\n         for (let i = 1; i <= Math.ceil(totalusers / 10); i++) {\n           pageNumbers.push(i);\n         }\n    }\n    \n   \n    return (\n      <nav>\n          <ul className=\"pagination\">\n              {pageNumbers.map(number => (\n                  <li key={number} className=\"page-item\">\n                      <a onClick={()=>paginate(number)} className='page-link'>\n                      {number}\n                      </a>\n                  </li>\n          ))}\n\n          </ul>\n\n      </nav>\n     \n    //   <ReactPaginate\n    //       previousLabel={\"prev\"}\n    //       nextLabel={\"next\"}\n    //       breakLabel={\"...\"}\n    //       breakClassName={\"break-me\"}\n    //       pageCount={pageCount}\n    //       marginPagesDisplayed={2}\n    //       pageRangeDisplayed={5}\n    //       onPageChange={paginate()}\n    //       containerClassName={\"pagination\"}\n    //       subContainerClassName={\"pages pagination\"}\n    //       activeClassName={'active'}\n    //       />\n    );\n}\n\nexport default Paginations\n","import React, { useContext, useState, useEffect, useHistory } from \"react\";\n\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\nimport Paginations from \"./Pagination\";\nimport { Link } from \"react-router-dom\";\n\n// react plugin used to create charts\nimport { Badge, Media, UncontrolledTooltip } from \"reactstrap\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport Axios from \"axios\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  CardFooter,\n  Table,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport { AuthContext } from \"context/GlobalState\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_GROUPS_REQUEST\":\n      return {\n        ...state,\n        isFetching: true,\n        hasError: false,\n      };\n    case \"FETCH_GROUPS_SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        groups: action.payload,\n      };\n    case \"FETCH_GROUPS_FAILURE\":\n      return {\n        ...state,\n        hasError: true,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\nconst reducer1 = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_USERS_REQUEST\":\n      return {\n        ...state,\n        isFetching: true,\n        hasError: false,\n      };\n    case \"FETCH_USERS_SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        users: action.payload,\n      };\n    case \"FETCH_USERS_FAILURE\":\n      return {\n        ...state,\n        hasError: true,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  groups: [],\n  isFetching: false,\n  hasError: false,\n};\nconst initialStateUsers = {\n  users: [],\n  isFetching: false,\n  hasError: false,\n};\nfunction Index() {\n  // const { state } = React.useContext(AuthContext);\n  const { state: authState } = React.useContext(AuthContext);\n  const [currentGroupPage, setCurrentGroupPage] = useState(1);\n  const [currentUserPage, setCurrentUserPage] = useState(1);\n\n  const [usersList, setUsersList] = useState([]);\n  const [groupsList, setGroupsList] = useState([]);\n  const [totalUsers, setTotalUsers] = useState();\n  const [userState, dispatch1] = React.useReducer(reducer1, initialStateUsers);\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const user = authState.user;\n  const token = authState.token;\n  //  const token = localStorage.getItem(\"auth-token\");\n  const id = authState.user?.id;\n  const body = {\n    role: user.role,\n    id: id,\n  };\n  // console.log(userState);\n\n  const paginate = (pageNumber) => {\n    console.log(pageNumber);\n    setCurrentUserPage(pageNumber);\n    // groupfetch();\n  };\n  useEffect(() => {\n    if (authState.user.role === \"admin\") {\n      const fetchData = async () => {\n        dispatch1({\n          type: \"FETCH_USERS_REQUEST\",\n        });\n        const request = await Axios.post(\n          `/admin/users/${currentUserPage}`,\n          body,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"auth-token\": token,\n            },\n          }\n        );\n        console.log(request.data.users);\n        dispatch1({\n          type: \"FETCH_USERS_SUCCESS\",\n          payload: request.data,\n        });\n\n        const data = request.data.users;\n\n        const total_users = request.data.total_users;\n        // console.log(total_users);\n        setTotalUsers(total_users);\n        setUsersList(data);\n      };\n      fetchData();\n    }\n  }, [currentUserPage]);\n  console.log(userState);\n\n  useEffect(() => {\n    if (authState.user.role === \"admin\") {\n      console.log(\"this is from admin role\");\n\n      const groupfetch = async () => {\n        dispatch({\n          type: \"FETCH_GROUPS_REQUEST\",\n        });\n        const req = await Axios.post(\n          `/admin/groups/${currentGroupPage}`,\n          body,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"auth-token\": token,\n            },\n          }\n        );\n        dispatch({\n          type: \"FETCH_GROUPS_SUCCESS\",\n          payload: req,\n        });\n\n        const data1 = req.data.groups;\n        // console.log(data1);\n        setGroupsList(data1);\n      };\n      groupfetch();\n    } else {\n      console.log(\"this is from user role\");\n      // Axios.get(`/group/get/${id}`, {\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //     \"auth-token\": token,\n      //   },\n      // });\n      const groupfetch = async () => {\n        dispatch({\n          type: \"FETCH_GROUPS_REQUEST\",\n        });\n        const req = await Axios.get(`/group/get/${id}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"auth-token\": token,\n          },\n        });\n        dispatch({\n          type: \"FETCH_GROUPS_SUCCESS\",\n          payload: req,\n        });\n\n        const data1 = req.data.Groups;\n        // console.log(data1);\n        setGroupsList(data1);\n      };\n      groupfetch(); \n    }\n  }, []);\n\n  console.log(groupsList);\n\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {authState.user.role === \"admin\" ? (\n          <>\n            {\" \"}\n            <Row className=\"mt-5\">\n              <Col className=\"mb-5 mb-xl-0\" xl=\"6\">\n                <Card className=\"shadow\">\n                  <CardHeader className=\"border-0\">\n                    <Row className=\"align-items-center\">\n                      <div className=\"col\">\n                        <h3 className=\"mb-0\">Active Groups</h3>\n                      </div>\n                      <div className=\"col text-right\">\n                        <Link to=\"/admin/group\" color=\"primary\" size=\"sm\">\n                          See all\n                        </Link>\n                      </div>\n                    </Row>\n                  </CardHeader>\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Target</th>\n                        <th scope=\"col\">Members</th>\n                      </tr>\n                    </thead>\n\n                    {state.isFetching ? (\n                      <tbody className=\"card\">\n                        <tr>\n                          <td>LOADING...</td>\n                        </tr>\n                      </tbody>\n                    ) : state.hasError ? (\n                      <tbody className=\"card\">\n                        <tr>AN ERROR HAS OCCURED</tr>\n                      </tbody>\n                    ) : state.groups.length === 0 ? (\n                      <tbody>\n                        {console.log(\"NO GROUPS: \", state.groups.length)}\n                        No Groups Found\n                      </tbody>\n                    ) : (\n                      <tbody>\n                        {groupsList.map((list) => {\n                          return (\n                            <tr key={list._id}>\n                              <th scope=\"row\">\n                                <Media className=\"align-items-center\">\n                                  <Media>\n                                    <span className=\"mb-0 text-sm\">\n                                      <Link to={`/group/${list._id}`}>\n                                        {list.title}\n                                      </Link>\n                                    </span>\n                                  </Media>\n                                </Media>\n                              </th>\n                              <td>{list.target_amount}</td>\n\n                              <td>\n                                    <div className=\"avatar-group\">\n                                      {`${list.members.length} / ${list.members_limit}`}\n                                    </div>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    )}\n                  </Table>\n                </Card>\n              </Col>\n              <Col className=\"\" xl=\"6\">\n                <CardHeader className=\"shadow\">\n                  <CardHeader className=\"border-0\">\n                    <Row className=\"align-items-center\">\n                      <div className=\"col\">\n                        <h3 className=\"mb-0\">All Users</h3>\n                      </div>\n                      <div className=\"col text-right\">\n                        <Button\n                          color=\"primary\"\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          size=\"sm\"\n                        >\n                          See all\n                        </Button>\n                      </div>\n                    </Row>\n                  </CardHeader>\n                  <Table className=\"align-items-center table-flush\" responsive>\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Role</th>\n                        <th scope=\"col\">Status</th>\n\n                        <th scope=\"col\" />\n                      </tr>\n                    </thead>\n                    {console.log(userState)}\n                    {userState.isFetching ? (\n                      <tbody className=\"card\">\n                        <tr>\n                          <td>LOADING...</td>\n                        </tr>\n                      </tbody>\n                    ) : userState.hasError ? (\n                      <tbody className=\"card\">\n                        <tr>AN ERROR HAS OCCURED</tr>\n                      </tbody>\n                    ) : userState.users.length === 0 ? (\n                      <tbody>No Users Found</tbody>\n                    ) : (\n                      <tbody>\n                        {usersList.map((item) => {\n                          return (\n                            <tr key={item._id}>\n                              <th scope=\"row\">{item.username}</th>\n                              <td>{item.email}</td>\n                              <td>{item.role}</td>\n                              <td>{item.status}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    )}\n                  </Table>\n                </CardHeader>\n                <CardFooter className=\"py-4\">\n                  <Paginations totalusers={totalUsers} paginate={paginate} />\n                </CardFooter>\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Active Groups</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Title</th>\n                      <th scope=\"col\">Target</th>\n                      <th scope=\"col\">Members</th>\n                    </tr>\n                  </thead>\n\n                  {state.isFetching ? (\n                    <tbody className=\"card\">\n                      <tr>\n                        <td>LOADING...</td>\n                      </tr>\n                    </tbody>\n                  ) : state.hasError ? (\n                    <tbody className=\"card\">\n                      <tr>AN ERROR HAS OCCURED</tr>\n                    </tbody>\n                  ) : state.groups.length === 0 ? (\n                    <tbody>\n                      {console.log(\"NO GROUPS: \", state.groups.length)}\n                      No Groups Found\n                    </tbody>\n                  ) : (\n                    <tbody>\n                      {groupsList.map((list) => {\n                        return (\n                          <tr key={list._id}>\n                            <th scope=\"row\">\n                              <Media className=\"align-items-center\">\n                                <Media>\n                                  <span className=\"mb-0 text-sm\">\n                                    <Link to={`/group/${list._id}`}>\n                                      {list.title}\n                                    </Link>\n                                  </span>\n                                </Media>\n                              </Media>\n                            </th>\n                            <td>{list.target_amount}</td>\n\n                            <td>\n                              <div className=\"avatar-group\">\n                                {`${list.members.length} / ${list.members_limit}`}\n                              </div>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  )}\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\"></Col>\n          </Row>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default Index;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { GlobalState } from \"../context/GlobalState\";\nimport {\n    Button, Card, CardHeader, CardBody,\n    NavItem, NavLink, Nav,\n    Container,Row, Col\n} from \"reactstrap\";\nimport Header from \"components/Headers/Header.js\";\nimport Axios from 'axios';\n\n\nimport './MessageBar.css';\n\nconst CreateGroup = () => {\n    // const { setUserData } = useContext(GlobalState);\n    const data = {\n        \"title\" : \"\",\n        \"members\": \"5f48fadb20130633e0299933\",\n        \"created_by\": \"5f48fadb20130633e0299933\",\n        \"target_amount\": \"\",\n        \"payment_frequency\": \"\",\n        \"payment_cycle\": \"Weekly\",\n        \"members_limit\": \"\"\n    };\n\n    const [title, setTitle] = useState();\n\tconst [members_limit, setMembersLimit] = useState();\n\tconst [target_amount, setTargetAmount] = useState();\n\tconst [payment_frequency, setFrequency] = useState();\n    const [payment_cycle, setCycle] = useState();\n    // const [created_by, setCreator] = useState();\n    const [createStatus, setCreateStatus] = useState();\n\n\n    const createGroup = () => {\n        const creator = JSON.parse(localStorage.getItem('user'));\n        let created_by, members;\n        if (creator){\n            created_by = creator.id;\n            members = creator.id;\n            console.log(created_by);\n        }\n        const groupData = { title, members, members_limit, target_amount, payment_frequency, payment_cycle, created_by };\n        try {\n            const token = localStorage.getItem('auth-token');\n            console.log(token);\n            Axios.post('/group/create', groupData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': token\n                }\n            })\n            .then( response => {\n                console.log('Group Created Successfully', response);\n                setCreateStatus(true);\n            }).catch(error => {\n                console.log('ERROR:>> ', error);\n                if (error.response.data.error){\n                    console.log({\n                        \"ERROR: \":error,\n                        'ERROR MESSAGE: ': error.response.data.error.message,\n                        'ERROR TITLE: ': error.response.data.error.errors.title.message,\n                        'ERROR KIND: ': error.response.data.error.errors.title.kind,\n                        'ERROR NAME: ': error.response.data.error.errors.title.name,\n                        'ERROR PATH': error.response.data.error.errors.title.path\n                    });\n                }\n                //console.log('ERROR MESSAGE:>> ', error.response.data.error.message);\n            });\n        } catch (error) {\n            console.log('ERROR CREATING GROUP: ', error);\n        }\n\n    };\n\n    useEffect (() => {\n        const successMessage = () => {\n            if (createStatus === true){\n                return (\n                    <div className=\"success\">\n                        Group Successfully Created\n                    </div>\n                )\n            }\n        }\n    }, [createStatus]);\n\n    return (\n        <div>\n            <Header />\n            <Container className=\"mt--7\" fluid>\n                <Row>\n\n                    <div className=\"col\">\n                        <Card className=\"shadow border-0\">\n                        <div className=\"card\" >\n                            <div className=\"card-header\">\n                                <center>\n                                    <h2>Enter Group Details</h2>\n                                </center>\n\n                            </div>\n                            <div className=\"row justify-content-center mb-4\">\n                                <div className=\"col-9 mt-4\">\n\n{/*<!-- -------------------------------- form --------------------------------- -->*/}\n\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" placeholder=\"Group Title\" onChange={ e => setTitle(e.target.value)} className=\"form-control\" id=\"title\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" placeholder=\"Members Limit\" onChange={ e => setMembersLimit(e.target.value)} className=\"form-control\" id=\"members\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" placeholder=\"Payment Frequency\" onChange={ e => setFrequency(e.target.value)} className=\"form-control\" id=\"frequency\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" placeholder=\"Target Amount\" onChange={ e => setTargetAmount(e.target.value)} className=\"form-control\" id=\"target\"/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" placeholder=\"Payment Interval\" onChange={ e => setCycle(e.target.value)} className=\"form-control\" id=\"interval\"/>\n                                    </div>\n\n                                    <button id=\"add\" type=\"submit\" onClick={createGroup} className=\"btn btn-primary\">Add</button>\n\n{/*<!-- ------------------------------ form end ------------------------------- -->*/}\n\n                                    <div >\n                                        {\n                                            createStatus ? (\n                                                <div className=\"success\">\n                                                    Group Successfully Created\n                                                </div>\n                                            ) : (<div></div>)\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default CreateGroup;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Badge,\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  CardFooter,\n  DropdownToggle,\n  DropdownMenu,\n  Modal,\n  Label,\n  Input,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  DropdownItem,\n  Media,\n  Progress,\n  Row,\n  Table,\n  UncontrolledDropdown,\n  UncontrolledTooltip,\n} from \"reactstrap\";\nimport Paginations from \"./Pagination\";\nimport Header from \"components/Headers/Header.js\";\nimport Axios from \"axios\";\nimport { AuthContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { array, reach } from \"yup\";\nimport { updateArrayBindingPattern } from \"typescript\";\n\nconst initialState = {\n  groups: [],\n  isFetching: false,\n  hasError: false,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_GROUPS_REQUEST\":\n      return {\n        ...state,\n        isFetching: true,\n        hasError: false,\n      };\n    case \"FETCH_GROUPS_SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        groups: action.payload,\n      };\n    case \"FETCH_GROUPS_FAILURE\":\n      return {\n        ...state,\n        hasError: true,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialUpdateState = {\n  groupId: null,\n  title: \"\",\n  membersLimit: \"\",\n};\nconst Groups = () => {\n  const [UpdateData, setUpdateData] = useState(initialUpdateState); // pass initial state\n  // const [currentPage, setCurrentPage] = useState(1);\n  const [groupsList, setGroupsList] = useState([]);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const { state: authState } = React.useContext(AuthContext);\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const [currentGroupPage, setCurrentGroupPage] = useState(1);\n  const [totalGroups, setTotalGroups] = useState();\n\n  const handleOnChange = (event) => {\n    setUpdateData({\n      ...UpdateData,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const handleOnEdit = (groupId) => {\n    setUpdateData({\n      ...UpdateData,\n      groupId: groupId,\n      userID: authState.user.id\n    });\n    toggle();\n  }\n\n  const handleOnClick = () => {\n    // setUpdateData({\n    //   ...UpdateData,\n    //   groupId: groupId,\n    // }); \n    toggle();\n    Axios.post(`/group/update/${UpdateData.groupId}`, UpdateData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": authState.token,\n      },\n    }).then((response) => {\n      console.log(response);\n    }).catch((error) => {\n      console.log(error.response)\n    });\n    // console.log(request.data);\n    \n\n  };\n\n\n  const paginate = (pageNumber) => {\n    console.log(pageNumber);\n    setCurrentGroupPage(pageNumber);\n    // groupfetch();\n  };\n  useEffect(() => {\n    dispatch({\n      type: \"FETCH_GROUPS_REQUEST\",\n    });\n    //  const user = JSON.parse(localStorage.getItem(\"user\"));\n    const user = authState.user;\n    const token = authState.token;\n    //  const token = localStorage.getItem(\"auth-token\");\n    const id = authState.user?.id;\n    const body = {\n      role: user.role,\n      id: id,\n    };\n    // clg\n    if (authState.user.role === \"admin\") {\n      const groupfetch = async () => {\n        dispatch({\n          type: \"FETCH_GROUPS_REQUEST\",\n        });\n        const req = await Axios.post(\n          `/admin/groups/${currentGroupPage}`,\n          body,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"auth-token\": token,\n            },\n          }\n        );\n        dispatch({\n          type: \"FETCH_GROUPS_SUCCESS\",\n          payload: req,\n        });\n        const posts = req.data.total_groups;\n\n        setTotalGroups(posts);\n        const data1 = req.data.groups;\n        // console.log(data1);\n        setGroupsList(data1);\n      };\n      groupfetch();\n    } else {\n      Axios.get(`/group/get/${id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": token,\n        },\n      })\n        .then((response) => {\n          console.log(response.data.Groups);\n          setGroupsList(response.data.Groups);\n          return response;\n        })\n        .then((response) => {\n          console.log(response);\n          dispatch({\n            type: \"FETCH_GROUPS_SUCCESS\",\n            payload: response,\n          });\n        })\n        .catch((error) => {\n          console.log(error.request);\n          dispatch({\n            type: \"FETCH_GROUPS_FAILURE\",\n          });\n        });\n    }\n  }, [currentGroupPage]);\n\n  return (\n    <div>\n      <Header />\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Groups</h3>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Target</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Members</th>\n                    <th scope=\"col\">Completion</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                {state.isFetching ? (\n                  <tbody className=\"card\">\n                    <tr>\n                      <td>LOADING...</td>\n                    </tr>\n                  </tbody>\n                ) : state.hasError ? (\n                  <tbody className=\"card\">\n                    <tr>AN ERROR HAS OCCURED</tr>\n                  </tbody>\n                ) : state.groups.length === 0 ? (\n                  <tbody>\n                    {console.log(\"NO GROUPS: \", state.groups.length)}\n                    No Groups Found\n                  </tbody>\n                ) : (\n                  <tbody>\n                          {groupsList.map((list) => {\n                            console.log(list);\n                      // console.log(\"MEMBERS: \", list.members);\n                      // console.log(\"TITLE: \", list.title);\n                      // console.log(\"TARGET AMOUNT: \", list.target_amount);\n                      return (\n                        <tr key={list._id}>\n                          <th scope=\"row\">\n                            <Media className=\"align-items-center\">\n                              <Media>\n                                <span className=\"mb-0 text-sm\">\n                                  <Link to={`/group/${list._id}`}>\n                                    {list.title}\n                                  </Link>\n                                </span>\n                              </Media>\n                            </Media>\n                          </th>\n                          <td>{list.target_amount}</td>\n                          <td>\n                            <Badge color=\"\" className=\"badge-dot mr-4\">\n                              <i className=\"bg-warning\" />\n                              pending\n                            </Badge>\n                          </td>\n                          <td>\n                            <div className=\"avatar-group\">\n                              {`${list.members.length} / ${list.members_limit}`}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"d-flex align-items-center\">\n                              <span className=\"mr-2\">60%</span>\n                              <div>\n                                <Progress\n                                  max=\"100\"\n                                  value=\"60\"\n                                  barClassName=\"bg-danger\"\n                                />\n                              </div>\n                            </div>\n                          </td>\n                          {console.log(\n                            list.created_by == authState.user.id\n                              ? \"true\"\n                              : \"false\"\n                          )}\n                          {list.cycle_status.length == 0 ? (\n                            authState.user.id == list.created_by ? (\n                              <td className=\"text-right\">\n                                <UncontrolledDropdown>\n                                  <DropdownToggle\n                                    className=\"btn-icon-only text-light\"\n                                    href=\"#pablo\"\n                                    role=\"button\"\n                                    size=\"sm\"\n                                    color=\"\"\n                                    onClick={(e) => e.preventDefault()}\n                                  >\n                                    <i className=\"fas fa-ellipsis-v\" />\n                                  </DropdownToggle>\n                                  <DropdownMenu\n                                    className=\"dropdown-menu-arrow\"\n                                    right\n                                  >\n                                    <DropdownItem\n                                      onClick={() => handleOnEdit(list._id)}\n                                    >\n                                      Edit\n                                    </DropdownItem>\n                                    <Modal isOpen={modal} toggle={toggle}>\n                                      <ModalHeader toggle={toggle}>\n                                        Edit Group Settings\n                                      </ModalHeader>\n                                      <ModalBody>\n                                        <Label>Title</Label>\n                                        <Input\n                                          name=\"title\"\n                                          value={UpdateData.title}\n                                          onChange={handleOnChange}\n                                        />\n                                        <Label>Members Limit</Label>\n                                        <Input\n                                          name=\"membersLimit\"\n                                          onChange={handleOnChange}\n                                          value={UpdateData.membersLimit}\n                                        />{\" \"}\n                                        <Label>Payment Frequency</Label>\n                                        <Input\n                                          name=\"paymentfrequency\"\n                                          value={UpdateData.paymentfrequency}\n                                          onChange={handleOnChange}\n                                        />\n                                        <Label>Target Amount</Label>\n                                        <Input\n                                          name=\"targetAmount\"\n                                          value={UpdateData.targetAmount}\n                                          onChange={handleOnChange}\n                                        />\n                                        <Label>Payment Interval</Label>\n                                        <Input\n                                          name=\"paymentInterval\"\n                                          value={UpdateData.paymentInterval}\n                                          onChange={handleOnChange}\n                                        />\n                                        <div className=\"form-group\"></div>\n                                      </ModalBody>\n                                      <ModalFooter>\n                                        <Button\n                                          color=\"primary\"\n                                          onClick={() => handleOnClick()}\n                                        >\n                                          {console.log(UpdateData)}\n                                          Save Settings\n                                        </Button>{\" \"}\n                                        <Button\n                                          color=\"secondary\"\n                                          onClick={toggle}\n                                        >\n                                          Cancel\n                                        </Button>\n                                      </ModalFooter>\n                                    </Modal>\n                                  </DropdownMenu>\n                                </UncontrolledDropdown>\n                              </td>\n                            ) : (\n                              <td></td>\n                            )\n                          ) : (\n                            <td></td>\n                          )}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                )}\n              </Table>\n\n              <CardFooter className=\"py-4\">\n                <Paginations totalposts={totalGroups} paginate={paginate} />\n              </CardFooter>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Groups;\n\n// eslint-disable-next-line no-lone-blocks\n{\n  /**\n{list.members.map( member =>{\n   return (\n      <span key={list.members._id}>\n         <a className=\"avatar avatar-sm\" href=\"#pablo\" id=\"tooltip742438047\" onClick={e => e.preventDefault()}>\n         <img alt=\"...\" className=\"rounded-circle\" src={require(\"assets/img/theme/team-1-800x800.jpg\")} />\n         </a>\n         <UncontrolledTooltip delay={0} target=\"tooltip742438047\">\n            {list.members.first_name}\n         </UncontrolledTooltip>\n      </span>\n   )\n})}\n\n*/\n}\n","import React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Jesse</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n                <Button\n                  color=\"info\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Edit profile\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from 'axios';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport { AuthContext } from \"context/GlobalState\";\n\nconst Profile = () => {\n  const [userProfile, setUserProfile] = useState({});\n  const {state} = React.useContext(AuthContext);\n\n  useEffect(()=>{\n    console.log('Profile');\n    // const user = JSON.parse(localStorage.getItem('user') || null)\n    const user = state.user;\n\n    const token =  (localStorage.getItem('auth-token') || null);\n    let header = {\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token\n        }\n    };\n\n    Axios.get(`/users/find-user/${user.id}`, header) // Fetching user data\n\t\t.then((response) => {\n\t\t\t// handle success\n      console.log(\"Profile: \", response);\n      setUserProfile({\n        email: response.data.email,\n        first_name: response.data.first_name,\n        last_name: response.data.last_name,\n        username: response.data.username,\n      })\n\t\t\treturn response;\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// handle error\n\t\t\tconsole.log(\"Got an error: \", error);\n\t\t});\n  }, []);\n\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n              <Card className=\"card-profile shadow\">\n                <Row className=\"justify-content-center\">\n                  <Col className=\"order-lg-2\" lg=\"3\">\n                    {/* <div className=\"card-profile-image\">\n                      <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                        <img\n                          alt=\"...\"\n                          className=\"rounded-circle\"\n                          src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                        />\n                      </a>\n                    </div> */}\n                  </Col>\n                </Row>\n                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Button className=\"mr-4\" color=\"info\" href=\"#pablo\" onClick={e => e.preventDefault()} size=\"sm\">\n                      Connect\n                    </Button>\n                    <Button className=\"float-right\" color=\"default\" href=\"#pablo\" onClick={e => e.preventDefault()}\n                      size=\"sm\"\n                    >\n                      Message\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 pt-md-4\">\n                  {/* <Row>\n                    <div className=\"col\">\n                      <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                        <div>\n                          <span className=\"heading\">22</span>\n                          <span className=\"description\">Friends</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">10</span>\n                          <span className=\"description\">Photos</span>\n                        </div>\n                        <div>\n                          <span className=\"heading\">89</span>\n                          <span className=\"description\">Comments</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Row> */}\n                  <div className=\"text-center\">\n                    <h3>\n                      {`${userProfile.first_name} ${userProfile.last_name}`}\n                      {/* <span className=\"font-weight-light\">, 27</span> */}\n                    </h3>\n                    {/* <div className=\"h5 font-weight-300\">\n                      <i className=\"ni location_pin mr-2\" />\n                      Bucharest, Romania\n                    </div>\n                    <div className=\"h5 mt-4\">\n                      <i className=\"ni business_briefcase-24 mr-2\" />\n                      Solution Manager - Creative Tim Officer\n                    </div> */}\n\n                    <hr className=\"my-4\" />\n                    <div>\n                      <i className=\"ni education_hat mr-2\" />\n                      {`${userProfile.email}`}\n                    </div>\n                    {/* <p>\n                      Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                      Nick Murphy — writes, performs and records all of his own music.\n                    </p>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Show more\n                    </a> */}\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">My account</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button color=\"primary\" href=\"#pablo\" onClick={e => e.preventDefault()} size=\"sm\">\n                        Settings\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      User information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-username\">\n                              Username\n                            </label>\n                            <Input type=\"text\"\n                              className=\"form-control-alternative\"\n                              defaultValue=\"lucky.jesse\"\n                              id=\"input-username\"\n                              placeholder={`${userProfile.username}`}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-email\">\n                              Email address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder={`${userProfile.email}`}\n                              type=\"email\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-first-name\">\n                              First name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={`${userProfile.first_name}`}\n                              id=\"input-first-name\"\n                              placeholder=\"First name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-last-name\">\n                              Last name\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue={`${userProfile.last_name}`}\n                              id=\"input-last-name\"\n                              placeholder=\"Last name\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Contact information\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-address\">\n                              Address\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Home Address\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-city\">\n                              City\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"New York\"\n                              id=\"input-city\"\n                              placeholder=\"City\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-country\">\n                              Country\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"United States\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label className=\"form-control-label\" htmlFor=\"input-country\">\n                              Postal code\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-postal-code\"\n                              placeholder=\"Postal code\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Description */}\n                    <h6 className=\"heading-small text-muted mb-4\">About me</h6>\n                    <div className=\"pl-lg-4\">\n                      <FormGroup>\n                        <label>About Me</label>\n                        <Input\n                          className=\"form-control-alternative\"\n                          placeholder=\"A few words about you ...\"\n                          rows=\"4\"\n                          defaultValue=\"A beautiful Dashboard for Bootstrap 4. It is Free and\n                          Open Source.\"\n                          type=\"textarea\"\n                        />\n                      </FormGroup>\n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n\n}\n\nexport default Profile;\n","import React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","import React, { useState, useContext } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/GlobalState\";\n// reactstrap components\nimport {\n  Button, Card, CardHeader,\n  CardBody, FormGroup, Form,\n  Input, InputGroupAddon,\n  InputGroupText, InputGroup,\n  Row, Col\n} from \"reactstrap\";\n\nimport Axios from 'axios';\nimport * as Yup from 'yup';\n\nfunction Register () {\n  const [first_name, setFirst_name] = useState();\n\tconst [last_name, setLast_name] = useState();\n\tconst [username, setUsername] = useState();\n\tconst [password, setPassword] = useState();\n\tconst [email, setEmail] = useState();\n\t// const [error, setError] = useState();\n\n  const [registerStatus, setRegisterStatus] = useState(false);\n\n\tconst { state,dispatch } = useContext(AuthContext);\n  // const navigate = useNavigate();\n\n  const submit = async (e) => {\n\t\te.preventDefault();\n\n    const newUser = { first_name, last_name, username, password, email };\n    await Axios.post(\"/api/auth/register\", newUser)\n    .then(response => {\n      console.log('Registered Successfully', response);\n      // LogginIn\n      setRegisterStatus(true);\n      Axios.post(\"/api/auth/login\", {\n        email,\n        password,\n      }).then( response => {\n        console.log('LoggedIn', response);\n        const user = response.data.user;\n        const token = response.data.token;\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            user,\n            token,\n          },\n        });\n        // localStorage.setItem('auth-token', response.data.token); // saving token to localstorage\n        // localStorage.setItem('login', true);\n        // localStorage.setItem('user', JSON.stringify(response.data.user));\n      })\n        \n      .catch( error => console.log('Error LoggingIn ', error));\n\n    })\n    .catch(error => console.log('Error signing up', error));\n\n\t};\n\n    return (\n      <>\n        <Col lg=\"6\" md=\"8\">\n          <Card className=\"bg-secondary shadow border-0\">\n            <CardHeader className=\"bg-transparent pb-5\">\n              <div className=\"text-muted text-center mt-2 mb-4\">\n                <h1 className=\"display-4\">Register</h1>\n              </div>\n            </CardHeader>\n            <CardBody className=\"px-lg-5 py-lg-5\">\n\n{/* ------------------------------- FORM Start ------------------------------- */}\n                <Form role=\"form\">\n                  {/** @FirstName */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-hat-3\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"firstName\" placeholder=\"First Name\" type=\"text\" onChange={(e) => setFirst_name(e.target.value)}/>\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @LasttName */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-hat-3\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"lastName\" placeholder=\"Last Name\" type=\"text\" onChange={(e) => setLast_name(e.target.value)} />\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @username */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-hat-3\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"username\" placeholder=\"User Name\" type=\"text\" onChange={(e) => setUsername(e.target.value)} />\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @Email */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-email-83\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input name=\"email\" placeholder=\"Email\" type=\"email\" onChange={(e) => setEmail(e.target.value)} autoComplete=\"new-email\"/>\n                    </InputGroup>\n                  </FormGroup>\n\n                  {/** @Password */}\n                  <FormGroup>\n                    <InputGroup className=\"input-group-alternative\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"ni ni-lock-circle-open\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input placeholder=\"Password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} autoComplete=\"new-password\"/>\n                    </InputGroup>\n                  </FormGroup>\n\n                  <div className=\"text-muted font-italic\">\n                    <small>\n                      password strength:{\" \"}\n                      <span className=\"text-success font-weight-700\">strong</span>\n                    </small>\n                  </div>\n                  <div className=\"text-center\">\n                    <Button className=\"mt-4\" color=\"primary\" type=\"button\" onClick={submit}>\n                      Create account\n                    </Button>\n                  </div>\n                  {\n                    registerStatus ? (\n                      <div className=\"success\">\n                        Successfully Registered\n                      </div>\n                    ) : (<div></div>)\n                  }\n                </Form>\n\n{/* ------------------------------- FORM Start ------------------------------- */}\n\n            </CardBody>\n          </Card>\n        </Col>\n      </>\n    );\n}\n\n\nexport default Register;\n","import Axios from 'axios';\nimport {initialState} from \"../context/GlobalState\"\nexport const login = (data, callback, dispatch) => {\n\treturn Axios.post(\"/api/auth/login\", data)\n\t\t.then((response) => {\n\t\t\t// handle success\n\t\t\t// console.log(response);\n\t\t\t// localStorage.setItem('auth-token', response.data.token); // saving token to localstorage\n\t\t\tcallback(response.data.token, true, response.data.user);\n\t\t\treturn response;\n\t\t}).then( response => {\n\t\t\tconst user = response.data.user;\n\t\t\tconst token = response.data.token;\n\t\t\t\n\t\t\t// console.log(user,token);\n\t\t\tdispatch({\n                type: \"LOGIN\",\n                payload: {\n\t\t\t\t\tuser,\n\t\t\t\t\ttoken\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(initialState);\n\t\t})\n\t\t.catch((error) => {\n\t\t\t// handle error\n\t\t\tconsole.log(\"Got an error: \", error);\n\t\t});\n}","import React, { useState, useContext, useEffect } from \"react\";\n// reactstrap components\nimport {\n\tButton,\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tFormGroup,\n\tForm,\n\tInput,\n\tInputGroupAddon,\n\tInputGroupText,\n\tInputGroup,\n\tRow,\n\tCol\n} from \"reactstrap\";\nimport { AuthContext } from \"../../context/GlobalState\";\nimport { login } from '../../utils/auth';\nimport '../MessageBar.css';\n\nfunction Login (props) {\n\t\n\tconst { state, dispatch } = useContext(AuthContext);\n\tconsole.log(\"this is login state\",state);\n\tconst initialState = {\n        email: \"\",\n        password: \"\",\n        isSubmitting: false,\n        errorMessage: null\n    };\n\tconst [loginData, setloginData] = useState(initialState); // pass initial state\n\n\tconst handleInputChange = event => {\n        setloginData({\n            ...loginData, \n            [event.target.name]: event.target.value\n        });\n    };\n\n\tconst submit = async (e) => {\n\t\te.preventDefault();\n\t\tsetloginData({\n            ...loginData,\n            isSubmitting: true,\n            errorMessage: null\n        });\n\t\tconsole.log('submitting');\n\t\tconst loginUserData = {\n\t\t\temail: loginData.email,\n\t\t\tpassword: loginData.password\n\t\t};\n\t\tconst setstate = async (token, loginStatus, userData) => {\n\t\t\t// console.log('response', token, loginStatus, userData);\n\t\t\tprops.history.push('/admin/index');  // redirecting\n\t\t}\n\t\tlogin(loginUserData, setstate, dispatch); // passing user data + callback + dispatch action\n\t}\n\n\tuseEffect(()=>{\n\t\tif (state.isAuthenticated){\n\t\t\tprops.history.push('/admin/index');\n\t\t}\n\t}, []);\n\treturn (\n    <>\n\t\t<Col lg=\"5\" md=\"7\">\n\t\t\t<Card className=\"bg-secondary shadow border-0\">\n\t\t\t\t<CardHeader className=\"bg-transparent pb-5\">\n\t\t\t\t\t<div className=\"text-muted text-center mt-2 mb-3\">\n\t\t\t\t\t<h1 className=\"display-4\">Welcome Back</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"px-lg-5 py-lg-5\">\n\n{/* ------------------------------- Form Start ------------------------------- */}\n\n\t\t\t\t\t\t<Form role=\"form\">\n\t\t\t\t\t\t\t<FormGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t<InputGroup className=\"input-group-alternative\">\n\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t\t<InputGroupText>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-email-83\" />\n\t\t\t\t\t\t\t\t\t\t</InputGroupText>\n\t\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t\t{/** ---------- @EMAIL ----------- */}\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\tvalue={ loginData.email }\n\t\t\t\t\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\t\t\t\t\ttype=\"email\" autoComplete=\"new-email\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<InputGroup className=\"input-group-alternative\">\n\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t\t<InputGroupText>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"ni ni-lock-circle-open\" />\n\t\t\t\t\t\t\t\t\t\t</InputGroupText>\n\t\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t\t{/**  --------- @PASSSWORD ---------- */}\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tvalue={ loginData.password }\n\t\t\t\t\t\t\t\t\t\tonChange={ handleInputChange }\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t<Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={submit}>\n\t\t\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstate.isAuthenticated ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"success\">\n\t\t\t\t\t\t\t\t\t\t\tSuccessfully Loggedin\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (<div></div>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\n{/* ------------------------------- Form End ------------------------------- */}\n\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t\t<Row className=\"mt-3\">\n\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t<a className=\"text-light\" href=\"#pablo\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t\t<small>Forgot password?</small>\n\t\t\t\t\t</a>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"text-right\" xs=\"6\">\n\t\t\t\t\t<a className=\"text-light\" href=\"#pablo\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t<small>Create new account</small>\n\t\t\t\t\t</a>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Col>\n    </>\n\t);\n}\n\nexport default Login;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Tables extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <h3 className=\"mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip742438047\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip742438047\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip941738690\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip941738690\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip804044742\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip804044742\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip996637554\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip996637554\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip746418347\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip746418347\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip102182364\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip102182364\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip406489510\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip406489510\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip476840018\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip476840018\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip753056318\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip753056318\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip441753266\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip441753266\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188462246\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188462246\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip621168444\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip621168444\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip875258217\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip875258217\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip834416663\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip834416663\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip372449339\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip372449339\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip108714769\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip108714769\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip664029969\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip664029969\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip806693074\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip806693074\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip844096937\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip844096937\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip757459971\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip757459971\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n                <CardFooter className=\"py-4\">\n                  <nav aria-label=\"...\">\n                    <Pagination\n                      className=\"pagination justify-content-end mb-0\"\n                      listClassName=\"justify-content-end mb-0\"\n                    >\n                      <PaginationItem className=\"disabled\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                          tabIndex=\"-1\"\n                        >\n                          <i className=\"fas fa-angle-left\" />\n                          <span className=\"sr-only\">Previous</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem className=\"active\">\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          1\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          2 <span className=\"sr-only\">(current)</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          3\n                        </PaginationLink>\n                      </PaginationItem>\n                      <PaginationItem>\n                        <PaginationLink\n                          href=\"#pablo\"\n                          onClick={e => e.preventDefault()}\n                        >\n                          <i className=\"fas fa-angle-right\" />\n                          <span className=\"sr-only\">Next</span>\n                        </PaginationLink>\n                      </PaginationItem>\n                    </Pagination>\n                  </nav>\n                </CardFooter>\n              </Card>\n            </div>\n          </Row>\n          {/* Dark table */}\n          <Row className=\"mt-5\">\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Card tables</h3>\n                </CardHeader>\n                <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Project</th>\n                      <th scope=\"col\">Budget</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Users</th>\n                      <th scope=\"col\">Completion</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/bootstrap.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Argon Design System\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,500 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-warning\" />\n                          pending\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip731399078\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip731399078\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip491083084\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip491083084\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip528540780\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip528540780\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip237898869\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip237898869\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/angular.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Angular Now UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$1,800 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip188614932\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip188614932\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip66535734\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip66535734\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip427561578\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip427561578\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip904098289\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip904098289\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/sketch.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Black Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$3,150 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-danger\" />\n                          delayed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip707904950\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip707904950\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip353988222\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip353988222\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip467171202\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip467171202\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip362118155\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip362118155\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">72%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"72\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/react.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              React Material Dashboard\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$4,400 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot\">\n                          <i className=\"bg-info\" />\n                          on schedule\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip226319315\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip226319315\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip711961370\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip711961370\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip216246707\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip216246707\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip638048561\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip638048561\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">90%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"90\"\n                              barClassName=\"bg-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a\n                            className=\"avatar rounded-circle mr-3\"\n                            href=\"#pablo\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              src={require(\"assets/img/theme/vue.jpg\")}\n                            />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">\n                              Vue Paper UI Kit PRO\n                            </span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>$2,200 USD</td>\n                      <td>\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\n                          <i className=\"bg-success\" />\n                          completed\n                        </Badge>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip781594051\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip781594051\"\n                          >\n                            Ryan Tompson\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip840372212\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-2-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip840372212\"\n                          >\n                            Romina Hadid\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip497647175\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-3-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip497647175\"\n                          >\n                            Alexander Smith\n                          </UncontrolledTooltip>\n                          <a\n                            className=\"avatar avatar-sm\"\n                            href=\"#pablo\"\n                            id=\"tooltip951447946\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <img\n                              alt=\"...\"\n                              className=\"rounded-circle\"\n                              src={require(\"assets/img/theme/team-4-800x800.jpg\")}\n                            />\n                          </a>\n                          <UncontrolledTooltip\n                            delay={0}\n                            target=\"tooltip951447946\"\n                          >\n                            Jessica Doe\n                          </UncontrolledTooltip>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">100%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"100\"\n                              barClassName=\"bg-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle\n                            className=\"btn-icon-only text-light\"\n                            href=\"#pablo\"\n                            role=\"button\"\n                            size=\"sm\"\n                            color=\"\"\n                            onClick={e => e.preventDefault()}\n                          >\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Another action\n                            </DropdownItem>\n                            <DropdownItem\n                              href=\"#pablo\"\n                              onClick={e => e.preventDefault()}\n                            >\n                              Something else here\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tables;\n","import Index from \"views/Index.js\";\nimport CreateGroup from \"views/CreateGroup\";\nimport Groups from \"views/Groups.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    //icon: \"ni ni-tv-2 text- primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/create-group\",\n    name: \"Create Group\",\n    //icon: \"ni ni-tv-2 text-primary\",\n    component: CreateGroup,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/group\",\n    name: \"Groups\",\n    //icon: \"ni ni-tv-2 text-primary\",\n    component: Groups,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/user-profile\",\n    name: \"User Profile\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/tables\",\n  //   name: \"Tables\",\n  //   icon: \"ni ni-bullet-list-67 text-red\",\n  //   component: Tables,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\"\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\"\n  }\n];\nexport default routes;\n","import React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport Group from \"../views/Group\";\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/argon-react.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { AuthContext, reducer, initialState } from \"../../context/GlobalState\";\n\nconst AdminNavbar = () => {\n  const { state } = useContext(AuthContext);\n  console.log('DISPLAY STATE: ', state)\n\n  const checkAuth = () => {\n    if (state.isAuthenticated) {\n      return (<>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/admin/index\" tag={Link}>\n          <i className=\"ni ni-planet\" />\n          <span className=\"nav-link-inner--text\">Dashboard</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/admin/user-profile\" tag={Link}>\n          <i className=\"ni ni-single-02\" />\n          <span className=\"nav-link-inner--text\">Profile</span>\n        </NavLink>\n      </NavItem>\n      </>)\n    }\n    else {\n      return (<>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/auth/register\" tag={Link}>\n          <i className=\"ni ni-circle-08\" />\n          <span className=\"nav-link-inner--text\">Register</span>\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\n          <i className=\"ni ni-key-25\" />\n          <span className=\"nav-link-inner--text\">Login</span>\n        </NavLink>\n      </NavItem>\n      </>)\n    }\n  }\n\n  return (\n    <>\n      <Navbar\n        className=\"navbar-top navbar-horizontal navbar-dark\"\n        expand=\"md\"\n      >\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            SouSou\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img alt=\"...\" src={require(\"assets/img/brand/argon-react.png\")}/>\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav className=\"ml-auto\" navbar>\n              {\n                checkAuth()\n              }\n            </Nav>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\nimport { useState } from 'react';\n// reactstrap components\nimport {\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Label,\n  Input,\n  Button,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\n\n// import React from 'react'\n\nfunction AuthFooter() {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © 2020{\" \"}\n                <a className=\"font-weight-bold ml-1\" href=\"#\" target=\"_blank\">\n                  SouSou\n                  </a>\n              </div>\n            </Col>\n            <Col xl=\"6\">\n              <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                <NavItem>\n                  <NavLink href=\"#\" target=\"_blank\">\n                    SouSou\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"#\" target=\"_blank\">\n                    About Us\n                    </NavLink>\n                </NavItem>\n\n                <NavItem>\n                  <NavLink onClick={toggle}>\n                    privacy policy\n                    </NavLink>\n                </NavItem>\n                <Modal isOpen={modal} toggle={toggle}>\n                  <ModalHeader toggle={toggle}>\n                      Privacy policy\n                                  </ModalHeader>\n                  <ModalBody>\n                    The standard Lorem Ipsum passage, used since the 1500s\n                    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n\n                    Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC\n                    \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"\n\n                    1914 translation by H. Rackham\n                    \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"\n\n                    Section 1.10.33 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC\n                    \"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\"\n\n                    1914 translation by H. Rackham\n                    \"On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.\"\n                  </ModalBody>\n                  <ModalFooter>\n                   \n                    <Button color=\"danger\" onClick={toggle}>\n                      Close\n                                    </Button>\n                  </ModalFooter>\n                </Modal>\n\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  )\n}\n\nexport default AuthFooter\n\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            {/* <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container> */}\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"./Homepage.css\";\nimport { Button } from 'reactstrap';\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nfunction Homepage() {\n  return (\n    <div class=\"homepage\">\n      <div className=\"color_overlay\"></div>\n      <AuthNavbar />\n      <div className=\"home__content\">\n        <h1>SouSou</h1>\n        <span>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book. It has survived not only\n          five centuries, but also the leap into electronic typesetting,\n          remaining essentially unchanged. It was popularised in the 1960s with\n          the release of Letraset sheets containing Lorem Ipsum passages, and\n          more recently with desktop publishing software like Aldus PageMaker\n          including versions of Lorem Ipsum.\n        </span>\n        <Button className=\"button\">Register Now</Button>\n      </div>\n\n       <AuthFooter class=\"home__footer\" />\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext, reducer, initialState } from \"./context/GlobalState\";\n\nexport const ProtectedRoute = ({ render: Component, ...rest }) => {\n    // const [state] = React.useReducer(reducer);\n    const { state, dispatch } = React.useContext(AuthContext);\n    //const { userData, setUserData } = useContext(GlobalState);\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                console.log('AUTH CONTEXT: ', state);\n                console.log('STATE: ', state)\n                if (state.isAuthenticated) {\n                    return (<Component {...props} />);\n                } else {\n                    return (\n                        <Redirect\n                        to={\"/auth/login\"}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n","import React, { useEffect } from 'react';\nimport Axios from 'axios';\n\nconst JoinGroup = (props) => {\n    const { groupId } = props.match.params;\n    const { userId } = props.match.params;\n    console.log(groupId, userId);\n    const handleGroupJoin = () => {\n        Axios.get(`/group/joingroup/${userId}/${groupId}`, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then( response => {\n            console.log('Successfully Joined the group: ', response);\n        })\n        .catch( error => {\n            console.log(error);\n        })\n    };\n    useEffect(() => {\n    }, []);\n\n    return (\n        <div className=\"mt-7 row justify-content-center\">\n            <h1 className=\"mr-4\">Welcome</h1>\n            <button className=\"btn btn-success btn-lg\" onClick={ handleGroupJoin }>Join</button>\n        </div>\n    );\n}\n\nexport default JoinGroup;","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n  HashRouter,\n} from \"react-router-dom\";\nimport { AuthContext, reducer, initialState } from \"./context/GlobalState\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport Homepage from \"layouts/Homepage.js\";\n\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport Group from \"./views/Group\";\nimport JoinGroup from \"./views/JoinGroup\";\n\n/** <<<  @Styles  >>> */\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useEffect(() => {\n    console.log(\"JSON PARSE: \", JSON.parse(localStorage.getItem(\"user\")));\n    const user = JSON.parse(localStorage.getItem(\"user\") || null || state.user);\n    const token = localStorage.getItem(\"auth-token\") || null || state.token;\n    // const user = state.user;\n    // const token = state.token;\n    if (user && token) {\n      // console.log(\"USER: \", user, \" TOKEN: \", token);\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          user,\n          token,\n        },\n      });\n    }\n  }, [state.token]);\n  // console.log('Initial State', initialState);\n\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      <HashRouter>\n        <BrowserRouter>\n          <Switch>\n            <ProtectedRoute\n              path=\"/admin\"\n              render={(props) => <AdminLayout {...props} />}\n            />\n            <Route exact path=\"/\" render={(props) => <Homepage {...props} />} />\n            <Route   path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n            <Route\n       \n              path=\"/group/:groupId\"\n              render={(props) => <Group {...props} />}\n            />\n            <ProtectedRoute\n              path=\"/join/:userId/:groupId\"\n              render={(props) => <JoinGroup {...props} />}\n            />\n            \n            <Route component={() => <div>404 Not found </div>} />\n          </Switch>\n        </BrowserRouter>\n      </HashRouter>\n    </AuthContext.Provider>\n  );\n};\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}